
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Athlete
 * 
 */
export type Athlete = $Result.DefaultSelection<Prisma.$AthletePayload>
/**
 * Model AthleteActivity
 * 
 */
export type AthleteActivity = $Result.DefaultSelection<Prisma.$AthleteActivityPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Athletes
 * const athletes = await prisma.athlete.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Athletes
   * const athletes = await prisma.athlete.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.athlete`: Exposes CRUD operations for the **Athlete** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Athletes
    * const athletes = await prisma.athlete.findMany()
    * ```
    */
  get athlete(): Prisma.AthleteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.athleteActivity`: Exposes CRUD operations for the **AthleteActivity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AthleteActivities
    * const athleteActivities = await prisma.athleteActivity.findMany()
    * ```
    */
  get athleteActivity(): Prisma.AthleteActivityDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.18.0
   * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import Bytes = runtime.Bytes
  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Athlete: 'Athlete',
    AthleteActivity: 'AthleteActivity'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "athlete" | "athleteActivity"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Athlete: {
        payload: Prisma.$AthletePayload<ExtArgs>
        fields: Prisma.AthleteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AthleteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AthleteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          findFirst: {
            args: Prisma.AthleteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AthleteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          findMany: {
            args: Prisma.AthleteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>[]
          }
          create: {
            args: Prisma.AthleteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          createMany: {
            args: Prisma.AthleteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AthleteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>[]
          }
          delete: {
            args: Prisma.AthleteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          update: {
            args: Prisma.AthleteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          deleteMany: {
            args: Prisma.AthleteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AthleteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AthleteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>[]
          }
          upsert: {
            args: Prisma.AthleteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthletePayload>
          }
          aggregate: {
            args: Prisma.AthleteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAthlete>
          }
          groupBy: {
            args: Prisma.AthleteGroupByArgs<ExtArgs>
            result: $Utils.Optional<AthleteGroupByOutputType>[]
          }
          count: {
            args: Prisma.AthleteCountArgs<ExtArgs>
            result: $Utils.Optional<AthleteCountAggregateOutputType> | number
          }
        }
      }
      AthleteActivity: {
        payload: Prisma.$AthleteActivityPayload<ExtArgs>
        fields: Prisma.AthleteActivityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AthleteActivityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AthleteActivityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          findFirst: {
            args: Prisma.AthleteActivityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AthleteActivityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          findMany: {
            args: Prisma.AthleteActivityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>[]
          }
          create: {
            args: Prisma.AthleteActivityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          createMany: {
            args: Prisma.AthleteActivityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AthleteActivityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>[]
          }
          delete: {
            args: Prisma.AthleteActivityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          update: {
            args: Prisma.AthleteActivityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          deleteMany: {
            args: Prisma.AthleteActivityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AthleteActivityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AthleteActivityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>[]
          }
          upsert: {
            args: Prisma.AthleteActivityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AthleteActivityPayload>
          }
          aggregate: {
            args: Prisma.AthleteActivityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAthleteActivity>
          }
          groupBy: {
            args: Prisma.AthleteActivityGroupByArgs<ExtArgs>
            result: $Utils.Optional<AthleteActivityGroupByOutputType>[]
          }
          count: {
            args: Prisma.AthleteActivityCountArgs<ExtArgs>
            result: $Utils.Optional<AthleteActivityCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    athlete?: AthleteOmit
    athleteActivity?: AthleteActivityOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AthleteCountOutputType
   */

  export type AthleteCountOutputType = {
    activities: number
  }

  export type AthleteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activities?: boolean | AthleteCountOutputTypeCountActivitiesArgs
  }

  // Custom InputTypes
  /**
   * AthleteCountOutputType without action
   */
  export type AthleteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteCountOutputType
     */
    select?: AthleteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AthleteCountOutputType without action
   */
  export type AthleteCountOutputTypeCountActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AthleteActivityWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Athlete
   */

  export type AggregateAthlete = {
    _count: AthleteCountAggregateOutputType | null
    _avg: AthleteAvgAggregateOutputType | null
    _sum: AthleteSumAggregateOutputType | null
    _min: AthleteMinAggregateOutputType | null
    _max: AthleteMaxAggregateOutputType | null
  }

  export type AthleteAvgAggregateOutputType = {
    weeklyMileage: number | null
    garmin_expires_in: number | null
  }

  export type AthleteSumAggregateOutputType = {
    weeklyMileage: number | null
    garmin_expires_in: number | null
  }

  export type AthleteMinAggregateOutputType = {
    id: string | null
    firebaseId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phoneNumber: string | null
    gofastHandle: string | null
    birthday: Date | null
    gender: string | null
    city: string | null
    state: string | null
    primarySport: string | null
    photoURL: string | null
    bio: string | null
    instagram: string | null
    runCrewId: string | null
    currentPace: string | null
    weeklyMileage: number | null
    trainingGoal: string | null
    targetRace: string | null
    trainingStartDate: Date | null
    preferredDistance: string | null
    timePreference: string | null
    paceRange: string | null
    runningGoals: string | null
    garmin_user_id: string | null
    garmin_access_token: string | null
    garmin_refresh_token: string | null
    garmin_expires_in: number | null
    garmin_scope: string | null
    garmin_connected_at: Date | null
    garmin_last_sync_at: Date | null
    garmin_is_connected: boolean | null
    garmin_disconnected_at: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    status: string | null
  }

  export type AthleteMaxAggregateOutputType = {
    id: string | null
    firebaseId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phoneNumber: string | null
    gofastHandle: string | null
    birthday: Date | null
    gender: string | null
    city: string | null
    state: string | null
    primarySport: string | null
    photoURL: string | null
    bio: string | null
    instagram: string | null
    runCrewId: string | null
    currentPace: string | null
    weeklyMileage: number | null
    trainingGoal: string | null
    targetRace: string | null
    trainingStartDate: Date | null
    preferredDistance: string | null
    timePreference: string | null
    paceRange: string | null
    runningGoals: string | null
    garmin_user_id: string | null
    garmin_access_token: string | null
    garmin_refresh_token: string | null
    garmin_expires_in: number | null
    garmin_scope: string | null
    garmin_connected_at: Date | null
    garmin_last_sync_at: Date | null
    garmin_is_connected: boolean | null
    garmin_disconnected_at: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    status: string | null
  }

  export type AthleteCountAggregateOutputType = {
    id: number
    firebaseId: number
    firstName: number
    lastName: number
    email: number
    phoneNumber: number
    gofastHandle: number
    birthday: number
    gender: number
    city: number
    state: number
    primarySport: number
    photoURL: number
    bio: number
    instagram: number
    runCrewId: number
    currentPace: number
    weeklyMileage: number
    trainingGoal: number
    targetRace: number
    trainingStartDate: number
    preferredDistance: number
    timePreference: number
    paceRange: number
    runningGoals: number
    garmin_user_id: number
    garmin_access_token: number
    garmin_refresh_token: number
    garmin_expires_in: number
    garmin_scope: number
    garmin_connected_at: number
    garmin_last_sync_at: number
    garmin_permissions: number
    garmin_is_connected: number
    garmin_disconnected_at: number
    garmin_user_profile: number
    garmin_user_sleep: number
    garmin_user_preferences: number
    createdAt: number
    updatedAt: number
    status: number
    _all: number
  }


  export type AthleteAvgAggregateInputType = {
    weeklyMileage?: true
    garmin_expires_in?: true
  }

  export type AthleteSumAggregateInputType = {
    weeklyMileage?: true
    garmin_expires_in?: true
  }

  export type AthleteMinAggregateInputType = {
    id?: true
    firebaseId?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    gofastHandle?: true
    birthday?: true
    gender?: true
    city?: true
    state?: true
    primarySport?: true
    photoURL?: true
    bio?: true
    instagram?: true
    runCrewId?: true
    currentPace?: true
    weeklyMileage?: true
    trainingGoal?: true
    targetRace?: true
    trainingStartDate?: true
    preferredDistance?: true
    timePreference?: true
    paceRange?: true
    runningGoals?: true
    garmin_user_id?: true
    garmin_access_token?: true
    garmin_refresh_token?: true
    garmin_expires_in?: true
    garmin_scope?: true
    garmin_connected_at?: true
    garmin_last_sync_at?: true
    garmin_is_connected?: true
    garmin_disconnected_at?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type AthleteMaxAggregateInputType = {
    id?: true
    firebaseId?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    gofastHandle?: true
    birthday?: true
    gender?: true
    city?: true
    state?: true
    primarySport?: true
    photoURL?: true
    bio?: true
    instagram?: true
    runCrewId?: true
    currentPace?: true
    weeklyMileage?: true
    trainingGoal?: true
    targetRace?: true
    trainingStartDate?: true
    preferredDistance?: true
    timePreference?: true
    paceRange?: true
    runningGoals?: true
    garmin_user_id?: true
    garmin_access_token?: true
    garmin_refresh_token?: true
    garmin_expires_in?: true
    garmin_scope?: true
    garmin_connected_at?: true
    garmin_last_sync_at?: true
    garmin_is_connected?: true
    garmin_disconnected_at?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type AthleteCountAggregateInputType = {
    id?: true
    firebaseId?: true
    firstName?: true
    lastName?: true
    email?: true
    phoneNumber?: true
    gofastHandle?: true
    birthday?: true
    gender?: true
    city?: true
    state?: true
    primarySport?: true
    photoURL?: true
    bio?: true
    instagram?: true
    runCrewId?: true
    currentPace?: true
    weeklyMileage?: true
    trainingGoal?: true
    targetRace?: true
    trainingStartDate?: true
    preferredDistance?: true
    timePreference?: true
    paceRange?: true
    runningGoals?: true
    garmin_user_id?: true
    garmin_access_token?: true
    garmin_refresh_token?: true
    garmin_expires_in?: true
    garmin_scope?: true
    garmin_connected_at?: true
    garmin_last_sync_at?: true
    garmin_permissions?: true
    garmin_is_connected?: true
    garmin_disconnected_at?: true
    garmin_user_profile?: true
    garmin_user_sleep?: true
    garmin_user_preferences?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    _all?: true
  }

  export type AthleteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Athlete to aggregate.
     */
    where?: AthleteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Athletes to fetch.
     */
    orderBy?: AthleteOrderByWithRelationInput | AthleteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AthleteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Athletes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Athletes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Athletes
    **/
    _count?: true | AthleteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AthleteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AthleteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AthleteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AthleteMaxAggregateInputType
  }

  export type GetAthleteAggregateType<T extends AthleteAggregateArgs> = {
        [P in keyof T & keyof AggregateAthlete]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAthlete[P]>
      : GetScalarType<T[P], AggregateAthlete[P]>
  }




  export type AthleteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AthleteWhereInput
    orderBy?: AthleteOrderByWithAggregationInput | AthleteOrderByWithAggregationInput[]
    by: AthleteScalarFieldEnum[] | AthleteScalarFieldEnum
    having?: AthleteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AthleteCountAggregateInputType | true
    _avg?: AthleteAvgAggregateInputType
    _sum?: AthleteSumAggregateInputType
    _min?: AthleteMinAggregateInputType
    _max?: AthleteMaxAggregateInputType
  }

  export type AthleteGroupByOutputType = {
    id: string
    firebaseId: string
    firstName: string | null
    lastName: string | null
    email: string
    phoneNumber: string | null
    gofastHandle: string | null
    birthday: Date | null
    gender: string | null
    city: string | null
    state: string | null
    primarySport: string | null
    photoURL: string | null
    bio: string | null
    instagram: string | null
    runCrewId: string | null
    currentPace: string | null
    weeklyMileage: number | null
    trainingGoal: string | null
    targetRace: string | null
    trainingStartDate: Date | null
    preferredDistance: string | null
    timePreference: string | null
    paceRange: string | null
    runningGoals: string | null
    garmin_user_id: string | null
    garmin_access_token: string | null
    garmin_refresh_token: string | null
    garmin_expires_in: number | null
    garmin_scope: string | null
    garmin_connected_at: Date | null
    garmin_last_sync_at: Date | null
    garmin_permissions: JsonValue | null
    garmin_is_connected: boolean
    garmin_disconnected_at: Date | null
    garmin_user_profile: JsonValue | null
    garmin_user_sleep: JsonValue | null
    garmin_user_preferences: JsonValue | null
    createdAt: Date
    updatedAt: Date
    status: string | null
    _count: AthleteCountAggregateOutputType | null
    _avg: AthleteAvgAggregateOutputType | null
    _sum: AthleteSumAggregateOutputType | null
    _min: AthleteMinAggregateOutputType | null
    _max: AthleteMaxAggregateOutputType | null
  }

  type GetAthleteGroupByPayload<T extends AthleteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AthleteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AthleteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AthleteGroupByOutputType[P]>
            : GetScalarType<T[P], AthleteGroupByOutputType[P]>
        }
      >
    >


  export type AthleteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firebaseId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    gofastHandle?: boolean
    birthday?: boolean
    gender?: boolean
    city?: boolean
    state?: boolean
    primarySport?: boolean
    photoURL?: boolean
    bio?: boolean
    instagram?: boolean
    runCrewId?: boolean
    currentPace?: boolean
    weeklyMileage?: boolean
    trainingGoal?: boolean
    targetRace?: boolean
    trainingStartDate?: boolean
    preferredDistance?: boolean
    timePreference?: boolean
    paceRange?: boolean
    runningGoals?: boolean
    garmin_user_id?: boolean
    garmin_access_token?: boolean
    garmin_refresh_token?: boolean
    garmin_expires_in?: boolean
    garmin_scope?: boolean
    garmin_connected_at?: boolean
    garmin_last_sync_at?: boolean
    garmin_permissions?: boolean
    garmin_is_connected?: boolean
    garmin_disconnected_at?: boolean
    garmin_user_profile?: boolean
    garmin_user_sleep?: boolean
    garmin_user_preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    activities?: boolean | Athlete$activitiesArgs<ExtArgs>
    _count?: boolean | AthleteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["athlete"]>

  export type AthleteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firebaseId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    gofastHandle?: boolean
    birthday?: boolean
    gender?: boolean
    city?: boolean
    state?: boolean
    primarySport?: boolean
    photoURL?: boolean
    bio?: boolean
    instagram?: boolean
    runCrewId?: boolean
    currentPace?: boolean
    weeklyMileage?: boolean
    trainingGoal?: boolean
    targetRace?: boolean
    trainingStartDate?: boolean
    preferredDistance?: boolean
    timePreference?: boolean
    paceRange?: boolean
    runningGoals?: boolean
    garmin_user_id?: boolean
    garmin_access_token?: boolean
    garmin_refresh_token?: boolean
    garmin_expires_in?: boolean
    garmin_scope?: boolean
    garmin_connected_at?: boolean
    garmin_last_sync_at?: boolean
    garmin_permissions?: boolean
    garmin_is_connected?: boolean
    garmin_disconnected_at?: boolean
    garmin_user_profile?: boolean
    garmin_user_sleep?: boolean
    garmin_user_preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }, ExtArgs["result"]["athlete"]>

  export type AthleteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firebaseId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    gofastHandle?: boolean
    birthday?: boolean
    gender?: boolean
    city?: boolean
    state?: boolean
    primarySport?: boolean
    photoURL?: boolean
    bio?: boolean
    instagram?: boolean
    runCrewId?: boolean
    currentPace?: boolean
    weeklyMileage?: boolean
    trainingGoal?: boolean
    targetRace?: boolean
    trainingStartDate?: boolean
    preferredDistance?: boolean
    timePreference?: boolean
    paceRange?: boolean
    runningGoals?: boolean
    garmin_user_id?: boolean
    garmin_access_token?: boolean
    garmin_refresh_token?: boolean
    garmin_expires_in?: boolean
    garmin_scope?: boolean
    garmin_connected_at?: boolean
    garmin_last_sync_at?: boolean
    garmin_permissions?: boolean
    garmin_is_connected?: boolean
    garmin_disconnected_at?: boolean
    garmin_user_profile?: boolean
    garmin_user_sleep?: boolean
    garmin_user_preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }, ExtArgs["result"]["athlete"]>

  export type AthleteSelectScalar = {
    id?: boolean
    firebaseId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phoneNumber?: boolean
    gofastHandle?: boolean
    birthday?: boolean
    gender?: boolean
    city?: boolean
    state?: boolean
    primarySport?: boolean
    photoURL?: boolean
    bio?: boolean
    instagram?: boolean
    runCrewId?: boolean
    currentPace?: boolean
    weeklyMileage?: boolean
    trainingGoal?: boolean
    targetRace?: boolean
    trainingStartDate?: boolean
    preferredDistance?: boolean
    timePreference?: boolean
    paceRange?: boolean
    runningGoals?: boolean
    garmin_user_id?: boolean
    garmin_access_token?: boolean
    garmin_refresh_token?: boolean
    garmin_expires_in?: boolean
    garmin_scope?: boolean
    garmin_connected_at?: boolean
    garmin_last_sync_at?: boolean
    garmin_permissions?: boolean
    garmin_is_connected?: boolean
    garmin_disconnected_at?: boolean
    garmin_user_profile?: boolean
    garmin_user_sleep?: boolean
    garmin_user_preferences?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }

  export type AthleteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firebaseId" | "firstName" | "lastName" | "email" | "phoneNumber" | "gofastHandle" | "birthday" | "gender" | "city" | "state" | "primarySport" | "photoURL" | "bio" | "instagram" | "runCrewId" | "currentPace" | "weeklyMileage" | "trainingGoal" | "targetRace" | "trainingStartDate" | "preferredDistance" | "timePreference" | "paceRange" | "runningGoals" | "garmin_user_id" | "garmin_access_token" | "garmin_refresh_token" | "garmin_expires_in" | "garmin_scope" | "garmin_connected_at" | "garmin_last_sync_at" | "garmin_permissions" | "garmin_is_connected" | "garmin_disconnected_at" | "garmin_user_profile" | "garmin_user_sleep" | "garmin_user_preferences" | "createdAt" | "updatedAt" | "status", ExtArgs["result"]["athlete"]>
  export type AthleteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activities?: boolean | Athlete$activitiesArgs<ExtArgs>
    _count?: boolean | AthleteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AthleteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AthleteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AthletePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Athlete"
    objects: {
      activities: Prisma.$AthleteActivityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firebaseId: string
      firstName: string | null
      lastName: string | null
      email: string
      phoneNumber: string | null
      gofastHandle: string | null
      birthday: Date | null
      gender: string | null
      city: string | null
      state: string | null
      primarySport: string | null
      photoURL: string | null
      bio: string | null
      instagram: string | null
      runCrewId: string | null
      currentPace: string | null
      weeklyMileage: number | null
      trainingGoal: string | null
      targetRace: string | null
      trainingStartDate: Date | null
      preferredDistance: string | null
      timePreference: string | null
      paceRange: string | null
      runningGoals: string | null
      garmin_user_id: string | null
      garmin_access_token: string | null
      garmin_refresh_token: string | null
      garmin_expires_in: number | null
      garmin_scope: string | null
      garmin_connected_at: Date | null
      garmin_last_sync_at: Date | null
      garmin_permissions: Prisma.JsonValue | null
      garmin_is_connected: boolean
      garmin_disconnected_at: Date | null
      garmin_user_profile: Prisma.JsonValue | null
      garmin_user_sleep: Prisma.JsonValue | null
      garmin_user_preferences: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      status: string | null
    }, ExtArgs["result"]["athlete"]>
    composites: {}
  }

  type AthleteGetPayload<S extends boolean | null | undefined | AthleteDefaultArgs> = $Result.GetResult<Prisma.$AthletePayload, S>

  type AthleteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AthleteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AthleteCountAggregateInputType | true
    }

  export interface AthleteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Athlete'], meta: { name: 'Athlete' } }
    /**
     * Find zero or one Athlete that matches the filter.
     * @param {AthleteFindUniqueArgs} args - Arguments to find a Athlete
     * @example
     * // Get one Athlete
     * const athlete = await prisma.athlete.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AthleteFindUniqueArgs>(args: SelectSubset<T, AthleteFindUniqueArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Athlete that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AthleteFindUniqueOrThrowArgs} args - Arguments to find a Athlete
     * @example
     * // Get one Athlete
     * const athlete = await prisma.athlete.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AthleteFindUniqueOrThrowArgs>(args: SelectSubset<T, AthleteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Athlete that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteFindFirstArgs} args - Arguments to find a Athlete
     * @example
     * // Get one Athlete
     * const athlete = await prisma.athlete.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AthleteFindFirstArgs>(args?: SelectSubset<T, AthleteFindFirstArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Athlete that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteFindFirstOrThrowArgs} args - Arguments to find a Athlete
     * @example
     * // Get one Athlete
     * const athlete = await prisma.athlete.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AthleteFindFirstOrThrowArgs>(args?: SelectSubset<T, AthleteFindFirstOrThrowArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Athletes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Athletes
     * const athletes = await prisma.athlete.findMany()
     * 
     * // Get first 10 Athletes
     * const athletes = await prisma.athlete.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const athleteWithIdOnly = await prisma.athlete.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AthleteFindManyArgs>(args?: SelectSubset<T, AthleteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Athlete.
     * @param {AthleteCreateArgs} args - Arguments to create a Athlete.
     * @example
     * // Create one Athlete
     * const Athlete = await prisma.athlete.create({
     *   data: {
     *     // ... data to create a Athlete
     *   }
     * })
     * 
     */
    create<T extends AthleteCreateArgs>(args: SelectSubset<T, AthleteCreateArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Athletes.
     * @param {AthleteCreateManyArgs} args - Arguments to create many Athletes.
     * @example
     * // Create many Athletes
     * const athlete = await prisma.athlete.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AthleteCreateManyArgs>(args?: SelectSubset<T, AthleteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Athletes and returns the data saved in the database.
     * @param {AthleteCreateManyAndReturnArgs} args - Arguments to create many Athletes.
     * @example
     * // Create many Athletes
     * const athlete = await prisma.athlete.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Athletes and only return the `id`
     * const athleteWithIdOnly = await prisma.athlete.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AthleteCreateManyAndReturnArgs>(args?: SelectSubset<T, AthleteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Athlete.
     * @param {AthleteDeleteArgs} args - Arguments to delete one Athlete.
     * @example
     * // Delete one Athlete
     * const Athlete = await prisma.athlete.delete({
     *   where: {
     *     // ... filter to delete one Athlete
     *   }
     * })
     * 
     */
    delete<T extends AthleteDeleteArgs>(args: SelectSubset<T, AthleteDeleteArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Athlete.
     * @param {AthleteUpdateArgs} args - Arguments to update one Athlete.
     * @example
     * // Update one Athlete
     * const athlete = await prisma.athlete.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AthleteUpdateArgs>(args: SelectSubset<T, AthleteUpdateArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Athletes.
     * @param {AthleteDeleteManyArgs} args - Arguments to filter Athletes to delete.
     * @example
     * // Delete a few Athletes
     * const { count } = await prisma.athlete.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AthleteDeleteManyArgs>(args?: SelectSubset<T, AthleteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Athletes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Athletes
     * const athlete = await prisma.athlete.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AthleteUpdateManyArgs>(args: SelectSubset<T, AthleteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Athletes and returns the data updated in the database.
     * @param {AthleteUpdateManyAndReturnArgs} args - Arguments to update many Athletes.
     * @example
     * // Update many Athletes
     * const athlete = await prisma.athlete.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Athletes and only return the `id`
     * const athleteWithIdOnly = await prisma.athlete.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AthleteUpdateManyAndReturnArgs>(args: SelectSubset<T, AthleteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Athlete.
     * @param {AthleteUpsertArgs} args - Arguments to update or create a Athlete.
     * @example
     * // Update or create a Athlete
     * const athlete = await prisma.athlete.upsert({
     *   create: {
     *     // ... data to create a Athlete
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Athlete we want to update
     *   }
     * })
     */
    upsert<T extends AthleteUpsertArgs>(args: SelectSubset<T, AthleteUpsertArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Athletes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteCountArgs} args - Arguments to filter Athletes to count.
     * @example
     * // Count the number of Athletes
     * const count = await prisma.athlete.count({
     *   where: {
     *     // ... the filter for the Athletes we want to count
     *   }
     * })
    **/
    count<T extends AthleteCountArgs>(
      args?: Subset<T, AthleteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AthleteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Athlete.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AthleteAggregateArgs>(args: Subset<T, AthleteAggregateArgs>): Prisma.PrismaPromise<GetAthleteAggregateType<T>>

    /**
     * Group by Athlete.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AthleteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AthleteGroupByArgs['orderBy'] }
        : { orderBy?: AthleteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AthleteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAthleteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Athlete model
   */
  readonly fields: AthleteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Athlete.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AthleteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    activities<T extends Athlete$activitiesArgs<ExtArgs> = {}>(args?: Subset<T, Athlete$activitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Athlete model
   */
  interface AthleteFieldRefs {
    readonly id: FieldRef<"Athlete", 'String'>
    readonly firebaseId: FieldRef<"Athlete", 'String'>
    readonly firstName: FieldRef<"Athlete", 'String'>
    readonly lastName: FieldRef<"Athlete", 'String'>
    readonly email: FieldRef<"Athlete", 'String'>
    readonly phoneNumber: FieldRef<"Athlete", 'String'>
    readonly gofastHandle: FieldRef<"Athlete", 'String'>
    readonly birthday: FieldRef<"Athlete", 'DateTime'>
    readonly gender: FieldRef<"Athlete", 'String'>
    readonly city: FieldRef<"Athlete", 'String'>
    readonly state: FieldRef<"Athlete", 'String'>
    readonly primarySport: FieldRef<"Athlete", 'String'>
    readonly photoURL: FieldRef<"Athlete", 'String'>
    readonly bio: FieldRef<"Athlete", 'String'>
    readonly instagram: FieldRef<"Athlete", 'String'>
    readonly runCrewId: FieldRef<"Athlete", 'String'>
    readonly currentPace: FieldRef<"Athlete", 'String'>
    readonly weeklyMileage: FieldRef<"Athlete", 'Int'>
    readonly trainingGoal: FieldRef<"Athlete", 'String'>
    readonly targetRace: FieldRef<"Athlete", 'String'>
    readonly trainingStartDate: FieldRef<"Athlete", 'DateTime'>
    readonly preferredDistance: FieldRef<"Athlete", 'String'>
    readonly timePreference: FieldRef<"Athlete", 'String'>
    readonly paceRange: FieldRef<"Athlete", 'String'>
    readonly runningGoals: FieldRef<"Athlete", 'String'>
    readonly garmin_user_id: FieldRef<"Athlete", 'String'>
    readonly garmin_access_token: FieldRef<"Athlete", 'String'>
    readonly garmin_refresh_token: FieldRef<"Athlete", 'String'>
    readonly garmin_expires_in: FieldRef<"Athlete", 'Int'>
    readonly garmin_scope: FieldRef<"Athlete", 'String'>
    readonly garmin_connected_at: FieldRef<"Athlete", 'DateTime'>
    readonly garmin_last_sync_at: FieldRef<"Athlete", 'DateTime'>
    readonly garmin_permissions: FieldRef<"Athlete", 'Json'>
    readonly garmin_is_connected: FieldRef<"Athlete", 'Boolean'>
    readonly garmin_disconnected_at: FieldRef<"Athlete", 'DateTime'>
    readonly garmin_user_profile: FieldRef<"Athlete", 'Json'>
    readonly garmin_user_sleep: FieldRef<"Athlete", 'Json'>
    readonly garmin_user_preferences: FieldRef<"Athlete", 'Json'>
    readonly createdAt: FieldRef<"Athlete", 'DateTime'>
    readonly updatedAt: FieldRef<"Athlete", 'DateTime'>
    readonly status: FieldRef<"Athlete", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Athlete findUnique
   */
  export type AthleteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter, which Athlete to fetch.
     */
    where: AthleteWhereUniqueInput
  }

  /**
   * Athlete findUniqueOrThrow
   */
  export type AthleteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter, which Athlete to fetch.
     */
    where: AthleteWhereUniqueInput
  }

  /**
   * Athlete findFirst
   */
  export type AthleteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter, which Athlete to fetch.
     */
    where?: AthleteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Athletes to fetch.
     */
    orderBy?: AthleteOrderByWithRelationInput | AthleteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Athletes.
     */
    cursor?: AthleteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Athletes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Athletes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Athletes.
     */
    distinct?: AthleteScalarFieldEnum | AthleteScalarFieldEnum[]
  }

  /**
   * Athlete findFirstOrThrow
   */
  export type AthleteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter, which Athlete to fetch.
     */
    where?: AthleteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Athletes to fetch.
     */
    orderBy?: AthleteOrderByWithRelationInput | AthleteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Athletes.
     */
    cursor?: AthleteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Athletes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Athletes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Athletes.
     */
    distinct?: AthleteScalarFieldEnum | AthleteScalarFieldEnum[]
  }

  /**
   * Athlete findMany
   */
  export type AthleteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter, which Athletes to fetch.
     */
    where?: AthleteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Athletes to fetch.
     */
    orderBy?: AthleteOrderByWithRelationInput | AthleteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Athletes.
     */
    cursor?: AthleteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Athletes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Athletes.
     */
    skip?: number
    distinct?: AthleteScalarFieldEnum | AthleteScalarFieldEnum[]
  }

  /**
   * Athlete create
   */
  export type AthleteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * The data needed to create a Athlete.
     */
    data: XOR<AthleteCreateInput, AthleteUncheckedCreateInput>
  }

  /**
   * Athlete createMany
   */
  export type AthleteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Athletes.
     */
    data: AthleteCreateManyInput | AthleteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Athlete createManyAndReturn
   */
  export type AthleteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * The data used to create many Athletes.
     */
    data: AthleteCreateManyInput | AthleteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Athlete update
   */
  export type AthleteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * The data needed to update a Athlete.
     */
    data: XOR<AthleteUpdateInput, AthleteUncheckedUpdateInput>
    /**
     * Choose, which Athlete to update.
     */
    where: AthleteWhereUniqueInput
  }

  /**
   * Athlete updateMany
   */
  export type AthleteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Athletes.
     */
    data: XOR<AthleteUpdateManyMutationInput, AthleteUncheckedUpdateManyInput>
    /**
     * Filter which Athletes to update
     */
    where?: AthleteWhereInput
    /**
     * Limit how many Athletes to update.
     */
    limit?: number
  }

  /**
   * Athlete updateManyAndReturn
   */
  export type AthleteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * The data used to update Athletes.
     */
    data: XOR<AthleteUpdateManyMutationInput, AthleteUncheckedUpdateManyInput>
    /**
     * Filter which Athletes to update
     */
    where?: AthleteWhereInput
    /**
     * Limit how many Athletes to update.
     */
    limit?: number
  }

  /**
   * Athlete upsert
   */
  export type AthleteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * The filter to search for the Athlete to update in case it exists.
     */
    where: AthleteWhereUniqueInput
    /**
     * In case the Athlete found by the `where` argument doesn't exist, create a new Athlete with this data.
     */
    create: XOR<AthleteCreateInput, AthleteUncheckedCreateInput>
    /**
     * In case the Athlete was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AthleteUpdateInput, AthleteUncheckedUpdateInput>
  }

  /**
   * Athlete delete
   */
  export type AthleteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
    /**
     * Filter which Athlete to delete.
     */
    where: AthleteWhereUniqueInput
  }

  /**
   * Athlete deleteMany
   */
  export type AthleteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Athletes to delete
     */
    where?: AthleteWhereInput
    /**
     * Limit how many Athletes to delete.
     */
    limit?: number
  }

  /**
   * Athlete.activities
   */
  export type Athlete$activitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    where?: AthleteActivityWhereInput
    orderBy?: AthleteActivityOrderByWithRelationInput | AthleteActivityOrderByWithRelationInput[]
    cursor?: AthleteActivityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AthleteActivityScalarFieldEnum | AthleteActivityScalarFieldEnum[]
  }

  /**
   * Athlete without action
   */
  export type AthleteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Athlete
     */
    select?: AthleteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Athlete
     */
    omit?: AthleteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteInclude<ExtArgs> | null
  }


  /**
   * Model AthleteActivity
   */

  export type AggregateAthleteActivity = {
    _count: AthleteActivityCountAggregateOutputType | null
    _avg: AthleteActivityAvgAggregateOutputType | null
    _sum: AthleteActivitySumAggregateOutputType | null
    _min: AthleteActivityMinAggregateOutputType | null
    _max: AthleteActivityMaxAggregateOutputType | null
  }

  export type AthleteActivityAvgAggregateOutputType = {
    duration: number | null
    distance: number | null
    averageSpeed: number | null
    calories: number | null
    averageHeartRate: number | null
    maxHeartRate: number | null
    elevationGain: number | null
    steps: number | null
    startLatitude: number | null
    startLongitude: number | null
    endLatitude: number | null
    endLongitude: number | null
  }

  export type AthleteActivitySumAggregateOutputType = {
    duration: number | null
    distance: number | null
    averageSpeed: number | null
    calories: number | null
    averageHeartRate: number | null
    maxHeartRate: number | null
    elevationGain: number | null
    steps: number | null
    startLatitude: number | null
    startLongitude: number | null
    endLatitude: number | null
    endLongitude: number | null
  }

  export type AthleteActivityMinAggregateOutputType = {
    id: string | null
    athleteId: string | null
    sourceActivityId: string | null
    source: string | null
    activityType: string | null
    activityName: string | null
    startTime: Date | null
    duration: number | null
    distance: number | null
    averageSpeed: number | null
    calories: number | null
    averageHeartRate: number | null
    maxHeartRate: number | null
    elevationGain: number | null
    steps: number | null
    startLatitude: number | null
    startLongitude: number | null
    endLatitude: number | null
    endLongitude: number | null
    summaryPolyline: string | null
    deviceName: string | null
    garminUserId: string | null
    hydratedAt: Date | null
    syncedAt: Date | null
    lastUpdatedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AthleteActivityMaxAggregateOutputType = {
    id: string | null
    athleteId: string | null
    sourceActivityId: string | null
    source: string | null
    activityType: string | null
    activityName: string | null
    startTime: Date | null
    duration: number | null
    distance: number | null
    averageSpeed: number | null
    calories: number | null
    averageHeartRate: number | null
    maxHeartRate: number | null
    elevationGain: number | null
    steps: number | null
    startLatitude: number | null
    startLongitude: number | null
    endLatitude: number | null
    endLongitude: number | null
    summaryPolyline: string | null
    deviceName: string | null
    garminUserId: string | null
    hydratedAt: Date | null
    syncedAt: Date | null
    lastUpdatedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AthleteActivityCountAggregateOutputType = {
    id: number
    athleteId: number
    sourceActivityId: number
    source: number
    activityType: number
    activityName: number
    startTime: number
    duration: number
    distance: number
    averageSpeed: number
    calories: number
    averageHeartRate: number
    maxHeartRate: number
    elevationGain: number
    steps: number
    startLatitude: number
    startLongitude: number
    endLatitude: number
    endLongitude: number
    summaryPolyline: number
    deviceName: number
    garminUserId: number
    summaryData: number
    detailData: number
    hydratedAt: number
    syncedAt: number
    lastUpdatedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AthleteActivityAvgAggregateInputType = {
    duration?: true
    distance?: true
    averageSpeed?: true
    calories?: true
    averageHeartRate?: true
    maxHeartRate?: true
    elevationGain?: true
    steps?: true
    startLatitude?: true
    startLongitude?: true
    endLatitude?: true
    endLongitude?: true
  }

  export type AthleteActivitySumAggregateInputType = {
    duration?: true
    distance?: true
    averageSpeed?: true
    calories?: true
    averageHeartRate?: true
    maxHeartRate?: true
    elevationGain?: true
    steps?: true
    startLatitude?: true
    startLongitude?: true
    endLatitude?: true
    endLongitude?: true
  }

  export type AthleteActivityMinAggregateInputType = {
    id?: true
    athleteId?: true
    sourceActivityId?: true
    source?: true
    activityType?: true
    activityName?: true
    startTime?: true
    duration?: true
    distance?: true
    averageSpeed?: true
    calories?: true
    averageHeartRate?: true
    maxHeartRate?: true
    elevationGain?: true
    steps?: true
    startLatitude?: true
    startLongitude?: true
    endLatitude?: true
    endLongitude?: true
    summaryPolyline?: true
    deviceName?: true
    garminUserId?: true
    hydratedAt?: true
    syncedAt?: true
    lastUpdatedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AthleteActivityMaxAggregateInputType = {
    id?: true
    athleteId?: true
    sourceActivityId?: true
    source?: true
    activityType?: true
    activityName?: true
    startTime?: true
    duration?: true
    distance?: true
    averageSpeed?: true
    calories?: true
    averageHeartRate?: true
    maxHeartRate?: true
    elevationGain?: true
    steps?: true
    startLatitude?: true
    startLongitude?: true
    endLatitude?: true
    endLongitude?: true
    summaryPolyline?: true
    deviceName?: true
    garminUserId?: true
    hydratedAt?: true
    syncedAt?: true
    lastUpdatedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AthleteActivityCountAggregateInputType = {
    id?: true
    athleteId?: true
    sourceActivityId?: true
    source?: true
    activityType?: true
    activityName?: true
    startTime?: true
    duration?: true
    distance?: true
    averageSpeed?: true
    calories?: true
    averageHeartRate?: true
    maxHeartRate?: true
    elevationGain?: true
    steps?: true
    startLatitude?: true
    startLongitude?: true
    endLatitude?: true
    endLongitude?: true
    summaryPolyline?: true
    deviceName?: true
    garminUserId?: true
    summaryData?: true
    detailData?: true
    hydratedAt?: true
    syncedAt?: true
    lastUpdatedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AthleteActivityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AthleteActivity to aggregate.
     */
    where?: AthleteActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AthleteActivities to fetch.
     */
    orderBy?: AthleteActivityOrderByWithRelationInput | AthleteActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AthleteActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AthleteActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AthleteActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AthleteActivities
    **/
    _count?: true | AthleteActivityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AthleteActivityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AthleteActivitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AthleteActivityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AthleteActivityMaxAggregateInputType
  }

  export type GetAthleteActivityAggregateType<T extends AthleteActivityAggregateArgs> = {
        [P in keyof T & keyof AggregateAthleteActivity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAthleteActivity[P]>
      : GetScalarType<T[P], AggregateAthleteActivity[P]>
  }




  export type AthleteActivityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AthleteActivityWhereInput
    orderBy?: AthleteActivityOrderByWithAggregationInput | AthleteActivityOrderByWithAggregationInput[]
    by: AthleteActivityScalarFieldEnum[] | AthleteActivityScalarFieldEnum
    having?: AthleteActivityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AthleteActivityCountAggregateInputType | true
    _avg?: AthleteActivityAvgAggregateInputType
    _sum?: AthleteActivitySumAggregateInputType
    _min?: AthleteActivityMinAggregateInputType
    _max?: AthleteActivityMaxAggregateInputType
  }

  export type AthleteActivityGroupByOutputType = {
    id: string
    athleteId: string
    sourceActivityId: string
    source: string
    activityType: string | null
    activityName: string | null
    startTime: Date | null
    duration: number | null
    distance: number | null
    averageSpeed: number | null
    calories: number | null
    averageHeartRate: number | null
    maxHeartRate: number | null
    elevationGain: number | null
    steps: number | null
    startLatitude: number | null
    startLongitude: number | null
    endLatitude: number | null
    endLongitude: number | null
    summaryPolyline: string | null
    deviceName: string | null
    garminUserId: string | null
    summaryData: JsonValue | null
    detailData: JsonValue | null
    hydratedAt: Date | null
    syncedAt: Date
    lastUpdatedAt: Date
    createdAt: Date
    updatedAt: Date
    _count: AthleteActivityCountAggregateOutputType | null
    _avg: AthleteActivityAvgAggregateOutputType | null
    _sum: AthleteActivitySumAggregateOutputType | null
    _min: AthleteActivityMinAggregateOutputType | null
    _max: AthleteActivityMaxAggregateOutputType | null
  }

  type GetAthleteActivityGroupByPayload<T extends AthleteActivityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AthleteActivityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AthleteActivityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AthleteActivityGroupByOutputType[P]>
            : GetScalarType<T[P], AthleteActivityGroupByOutputType[P]>
        }
      >
    >


  export type AthleteActivitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    athleteId?: boolean
    sourceActivityId?: boolean
    source?: boolean
    activityType?: boolean
    activityName?: boolean
    startTime?: boolean
    duration?: boolean
    distance?: boolean
    averageSpeed?: boolean
    calories?: boolean
    averageHeartRate?: boolean
    maxHeartRate?: boolean
    elevationGain?: boolean
    steps?: boolean
    startLatitude?: boolean
    startLongitude?: boolean
    endLatitude?: boolean
    endLongitude?: boolean
    summaryPolyline?: boolean
    deviceName?: boolean
    garminUserId?: boolean
    summaryData?: boolean
    detailData?: boolean
    hydratedAt?: boolean
    syncedAt?: boolean
    lastUpdatedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["athleteActivity"]>

  export type AthleteActivitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    athleteId?: boolean
    sourceActivityId?: boolean
    source?: boolean
    activityType?: boolean
    activityName?: boolean
    startTime?: boolean
    duration?: boolean
    distance?: boolean
    averageSpeed?: boolean
    calories?: boolean
    averageHeartRate?: boolean
    maxHeartRate?: boolean
    elevationGain?: boolean
    steps?: boolean
    startLatitude?: boolean
    startLongitude?: boolean
    endLatitude?: boolean
    endLongitude?: boolean
    summaryPolyline?: boolean
    deviceName?: boolean
    garminUserId?: boolean
    summaryData?: boolean
    detailData?: boolean
    hydratedAt?: boolean
    syncedAt?: boolean
    lastUpdatedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["athleteActivity"]>

  export type AthleteActivitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    athleteId?: boolean
    sourceActivityId?: boolean
    source?: boolean
    activityType?: boolean
    activityName?: boolean
    startTime?: boolean
    duration?: boolean
    distance?: boolean
    averageSpeed?: boolean
    calories?: boolean
    averageHeartRate?: boolean
    maxHeartRate?: boolean
    elevationGain?: boolean
    steps?: boolean
    startLatitude?: boolean
    startLongitude?: boolean
    endLatitude?: boolean
    endLongitude?: boolean
    summaryPolyline?: boolean
    deviceName?: boolean
    garminUserId?: boolean
    summaryData?: boolean
    detailData?: boolean
    hydratedAt?: boolean
    syncedAt?: boolean
    lastUpdatedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["athleteActivity"]>

  export type AthleteActivitySelectScalar = {
    id?: boolean
    athleteId?: boolean
    sourceActivityId?: boolean
    source?: boolean
    activityType?: boolean
    activityName?: boolean
    startTime?: boolean
    duration?: boolean
    distance?: boolean
    averageSpeed?: boolean
    calories?: boolean
    averageHeartRate?: boolean
    maxHeartRate?: boolean
    elevationGain?: boolean
    steps?: boolean
    startLatitude?: boolean
    startLongitude?: boolean
    endLatitude?: boolean
    endLongitude?: boolean
    summaryPolyline?: boolean
    deviceName?: boolean
    garminUserId?: boolean
    summaryData?: boolean
    detailData?: boolean
    hydratedAt?: boolean
    syncedAt?: boolean
    lastUpdatedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AthleteActivityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "athleteId" | "sourceActivityId" | "source" | "activityType" | "activityName" | "startTime" | "duration" | "distance" | "averageSpeed" | "calories" | "averageHeartRate" | "maxHeartRate" | "elevationGain" | "steps" | "startLatitude" | "startLongitude" | "endLatitude" | "endLongitude" | "summaryPolyline" | "deviceName" | "garminUserId" | "summaryData" | "detailData" | "hydratedAt" | "syncedAt" | "lastUpdatedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["athleteActivity"]>
  export type AthleteActivityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }
  export type AthleteActivityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }
  export type AthleteActivityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    athlete?: boolean | AthleteDefaultArgs<ExtArgs>
  }

  export type $AthleteActivityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AthleteActivity"
    objects: {
      athlete: Prisma.$AthletePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      athleteId: string
      sourceActivityId: string
      source: string
      activityType: string | null
      activityName: string | null
      startTime: Date | null
      duration: number | null
      distance: number | null
      averageSpeed: number | null
      calories: number | null
      averageHeartRate: number | null
      maxHeartRate: number | null
      elevationGain: number | null
      steps: number | null
      startLatitude: number | null
      startLongitude: number | null
      endLatitude: number | null
      endLongitude: number | null
      summaryPolyline: string | null
      deviceName: string | null
      garminUserId: string | null
      summaryData: Prisma.JsonValue | null
      detailData: Prisma.JsonValue | null
      hydratedAt: Date | null
      syncedAt: Date
      lastUpdatedAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["athleteActivity"]>
    composites: {}
  }

  type AthleteActivityGetPayload<S extends boolean | null | undefined | AthleteActivityDefaultArgs> = $Result.GetResult<Prisma.$AthleteActivityPayload, S>

  type AthleteActivityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AthleteActivityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AthleteActivityCountAggregateInputType | true
    }

  export interface AthleteActivityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AthleteActivity'], meta: { name: 'AthleteActivity' } }
    /**
     * Find zero or one AthleteActivity that matches the filter.
     * @param {AthleteActivityFindUniqueArgs} args - Arguments to find a AthleteActivity
     * @example
     * // Get one AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AthleteActivityFindUniqueArgs>(args: SelectSubset<T, AthleteActivityFindUniqueArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AthleteActivity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AthleteActivityFindUniqueOrThrowArgs} args - Arguments to find a AthleteActivity
     * @example
     * // Get one AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AthleteActivityFindUniqueOrThrowArgs>(args: SelectSubset<T, AthleteActivityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AthleteActivity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityFindFirstArgs} args - Arguments to find a AthleteActivity
     * @example
     * // Get one AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AthleteActivityFindFirstArgs>(args?: SelectSubset<T, AthleteActivityFindFirstArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AthleteActivity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityFindFirstOrThrowArgs} args - Arguments to find a AthleteActivity
     * @example
     * // Get one AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AthleteActivityFindFirstOrThrowArgs>(args?: SelectSubset<T, AthleteActivityFindFirstOrThrowArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AthleteActivities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AthleteActivities
     * const athleteActivities = await prisma.athleteActivity.findMany()
     * 
     * // Get first 10 AthleteActivities
     * const athleteActivities = await prisma.athleteActivity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const athleteActivityWithIdOnly = await prisma.athleteActivity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AthleteActivityFindManyArgs>(args?: SelectSubset<T, AthleteActivityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AthleteActivity.
     * @param {AthleteActivityCreateArgs} args - Arguments to create a AthleteActivity.
     * @example
     * // Create one AthleteActivity
     * const AthleteActivity = await prisma.athleteActivity.create({
     *   data: {
     *     // ... data to create a AthleteActivity
     *   }
     * })
     * 
     */
    create<T extends AthleteActivityCreateArgs>(args: SelectSubset<T, AthleteActivityCreateArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AthleteActivities.
     * @param {AthleteActivityCreateManyArgs} args - Arguments to create many AthleteActivities.
     * @example
     * // Create many AthleteActivities
     * const athleteActivity = await prisma.athleteActivity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AthleteActivityCreateManyArgs>(args?: SelectSubset<T, AthleteActivityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AthleteActivities and returns the data saved in the database.
     * @param {AthleteActivityCreateManyAndReturnArgs} args - Arguments to create many AthleteActivities.
     * @example
     * // Create many AthleteActivities
     * const athleteActivity = await prisma.athleteActivity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AthleteActivities and only return the `id`
     * const athleteActivityWithIdOnly = await prisma.athleteActivity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AthleteActivityCreateManyAndReturnArgs>(args?: SelectSubset<T, AthleteActivityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AthleteActivity.
     * @param {AthleteActivityDeleteArgs} args - Arguments to delete one AthleteActivity.
     * @example
     * // Delete one AthleteActivity
     * const AthleteActivity = await prisma.athleteActivity.delete({
     *   where: {
     *     // ... filter to delete one AthleteActivity
     *   }
     * })
     * 
     */
    delete<T extends AthleteActivityDeleteArgs>(args: SelectSubset<T, AthleteActivityDeleteArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AthleteActivity.
     * @param {AthleteActivityUpdateArgs} args - Arguments to update one AthleteActivity.
     * @example
     * // Update one AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AthleteActivityUpdateArgs>(args: SelectSubset<T, AthleteActivityUpdateArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AthleteActivities.
     * @param {AthleteActivityDeleteManyArgs} args - Arguments to filter AthleteActivities to delete.
     * @example
     * // Delete a few AthleteActivities
     * const { count } = await prisma.athleteActivity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AthleteActivityDeleteManyArgs>(args?: SelectSubset<T, AthleteActivityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AthleteActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AthleteActivities
     * const athleteActivity = await prisma.athleteActivity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AthleteActivityUpdateManyArgs>(args: SelectSubset<T, AthleteActivityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AthleteActivities and returns the data updated in the database.
     * @param {AthleteActivityUpdateManyAndReturnArgs} args - Arguments to update many AthleteActivities.
     * @example
     * // Update many AthleteActivities
     * const athleteActivity = await prisma.athleteActivity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AthleteActivities and only return the `id`
     * const athleteActivityWithIdOnly = await prisma.athleteActivity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AthleteActivityUpdateManyAndReturnArgs>(args: SelectSubset<T, AthleteActivityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AthleteActivity.
     * @param {AthleteActivityUpsertArgs} args - Arguments to update or create a AthleteActivity.
     * @example
     * // Update or create a AthleteActivity
     * const athleteActivity = await prisma.athleteActivity.upsert({
     *   create: {
     *     // ... data to create a AthleteActivity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AthleteActivity we want to update
     *   }
     * })
     */
    upsert<T extends AthleteActivityUpsertArgs>(args: SelectSubset<T, AthleteActivityUpsertArgs<ExtArgs>>): Prisma__AthleteActivityClient<$Result.GetResult<Prisma.$AthleteActivityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AthleteActivities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityCountArgs} args - Arguments to filter AthleteActivities to count.
     * @example
     * // Count the number of AthleteActivities
     * const count = await prisma.athleteActivity.count({
     *   where: {
     *     // ... the filter for the AthleteActivities we want to count
     *   }
     * })
    **/
    count<T extends AthleteActivityCountArgs>(
      args?: Subset<T, AthleteActivityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AthleteActivityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AthleteActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AthleteActivityAggregateArgs>(args: Subset<T, AthleteActivityAggregateArgs>): Prisma.PrismaPromise<GetAthleteActivityAggregateType<T>>

    /**
     * Group by AthleteActivity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AthleteActivityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AthleteActivityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AthleteActivityGroupByArgs['orderBy'] }
        : { orderBy?: AthleteActivityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AthleteActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAthleteActivityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AthleteActivity model
   */
  readonly fields: AthleteActivityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AthleteActivity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AthleteActivityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    athlete<T extends AthleteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AthleteDefaultArgs<ExtArgs>>): Prisma__AthleteClient<$Result.GetResult<Prisma.$AthletePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AthleteActivity model
   */
  interface AthleteActivityFieldRefs {
    readonly id: FieldRef<"AthleteActivity", 'String'>
    readonly athleteId: FieldRef<"AthleteActivity", 'String'>
    readonly sourceActivityId: FieldRef<"AthleteActivity", 'String'>
    readonly source: FieldRef<"AthleteActivity", 'String'>
    readonly activityType: FieldRef<"AthleteActivity", 'String'>
    readonly activityName: FieldRef<"AthleteActivity", 'String'>
    readonly startTime: FieldRef<"AthleteActivity", 'DateTime'>
    readonly duration: FieldRef<"AthleteActivity", 'Int'>
    readonly distance: FieldRef<"AthleteActivity", 'Float'>
    readonly averageSpeed: FieldRef<"AthleteActivity", 'Float'>
    readonly calories: FieldRef<"AthleteActivity", 'Int'>
    readonly averageHeartRate: FieldRef<"AthleteActivity", 'Int'>
    readonly maxHeartRate: FieldRef<"AthleteActivity", 'Int'>
    readonly elevationGain: FieldRef<"AthleteActivity", 'Float'>
    readonly steps: FieldRef<"AthleteActivity", 'Int'>
    readonly startLatitude: FieldRef<"AthleteActivity", 'Float'>
    readonly startLongitude: FieldRef<"AthleteActivity", 'Float'>
    readonly endLatitude: FieldRef<"AthleteActivity", 'Float'>
    readonly endLongitude: FieldRef<"AthleteActivity", 'Float'>
    readonly summaryPolyline: FieldRef<"AthleteActivity", 'String'>
    readonly deviceName: FieldRef<"AthleteActivity", 'String'>
    readonly garminUserId: FieldRef<"AthleteActivity", 'String'>
    readonly summaryData: FieldRef<"AthleteActivity", 'Json'>
    readonly detailData: FieldRef<"AthleteActivity", 'Json'>
    readonly hydratedAt: FieldRef<"AthleteActivity", 'DateTime'>
    readonly syncedAt: FieldRef<"AthleteActivity", 'DateTime'>
    readonly lastUpdatedAt: FieldRef<"AthleteActivity", 'DateTime'>
    readonly createdAt: FieldRef<"AthleteActivity", 'DateTime'>
    readonly updatedAt: FieldRef<"AthleteActivity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AthleteActivity findUnique
   */
  export type AthleteActivityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter, which AthleteActivity to fetch.
     */
    where: AthleteActivityWhereUniqueInput
  }

  /**
   * AthleteActivity findUniqueOrThrow
   */
  export type AthleteActivityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter, which AthleteActivity to fetch.
     */
    where: AthleteActivityWhereUniqueInput
  }

  /**
   * AthleteActivity findFirst
   */
  export type AthleteActivityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter, which AthleteActivity to fetch.
     */
    where?: AthleteActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AthleteActivities to fetch.
     */
    orderBy?: AthleteActivityOrderByWithRelationInput | AthleteActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AthleteActivities.
     */
    cursor?: AthleteActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AthleteActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AthleteActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AthleteActivities.
     */
    distinct?: AthleteActivityScalarFieldEnum | AthleteActivityScalarFieldEnum[]
  }

  /**
   * AthleteActivity findFirstOrThrow
   */
  export type AthleteActivityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter, which AthleteActivity to fetch.
     */
    where?: AthleteActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AthleteActivities to fetch.
     */
    orderBy?: AthleteActivityOrderByWithRelationInput | AthleteActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AthleteActivities.
     */
    cursor?: AthleteActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AthleteActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AthleteActivities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AthleteActivities.
     */
    distinct?: AthleteActivityScalarFieldEnum | AthleteActivityScalarFieldEnum[]
  }

  /**
   * AthleteActivity findMany
   */
  export type AthleteActivityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter, which AthleteActivities to fetch.
     */
    where?: AthleteActivityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AthleteActivities to fetch.
     */
    orderBy?: AthleteActivityOrderByWithRelationInput | AthleteActivityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AthleteActivities.
     */
    cursor?: AthleteActivityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AthleteActivities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AthleteActivities.
     */
    skip?: number
    distinct?: AthleteActivityScalarFieldEnum | AthleteActivityScalarFieldEnum[]
  }

  /**
   * AthleteActivity create
   */
  export type AthleteActivityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * The data needed to create a AthleteActivity.
     */
    data: XOR<AthleteActivityCreateInput, AthleteActivityUncheckedCreateInput>
  }

  /**
   * AthleteActivity createMany
   */
  export type AthleteActivityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AthleteActivities.
     */
    data: AthleteActivityCreateManyInput | AthleteActivityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AthleteActivity createManyAndReturn
   */
  export type AthleteActivityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * The data used to create many AthleteActivities.
     */
    data: AthleteActivityCreateManyInput | AthleteActivityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AthleteActivity update
   */
  export type AthleteActivityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * The data needed to update a AthleteActivity.
     */
    data: XOR<AthleteActivityUpdateInput, AthleteActivityUncheckedUpdateInput>
    /**
     * Choose, which AthleteActivity to update.
     */
    where: AthleteActivityWhereUniqueInput
  }

  /**
   * AthleteActivity updateMany
   */
  export type AthleteActivityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AthleteActivities.
     */
    data: XOR<AthleteActivityUpdateManyMutationInput, AthleteActivityUncheckedUpdateManyInput>
    /**
     * Filter which AthleteActivities to update
     */
    where?: AthleteActivityWhereInput
    /**
     * Limit how many AthleteActivities to update.
     */
    limit?: number
  }

  /**
   * AthleteActivity updateManyAndReturn
   */
  export type AthleteActivityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * The data used to update AthleteActivities.
     */
    data: XOR<AthleteActivityUpdateManyMutationInput, AthleteActivityUncheckedUpdateManyInput>
    /**
     * Filter which AthleteActivities to update
     */
    where?: AthleteActivityWhereInput
    /**
     * Limit how many AthleteActivities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AthleteActivity upsert
   */
  export type AthleteActivityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * The filter to search for the AthleteActivity to update in case it exists.
     */
    where: AthleteActivityWhereUniqueInput
    /**
     * In case the AthleteActivity found by the `where` argument doesn't exist, create a new AthleteActivity with this data.
     */
    create: XOR<AthleteActivityCreateInput, AthleteActivityUncheckedCreateInput>
    /**
     * In case the AthleteActivity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AthleteActivityUpdateInput, AthleteActivityUncheckedUpdateInput>
  }

  /**
   * AthleteActivity delete
   */
  export type AthleteActivityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
    /**
     * Filter which AthleteActivity to delete.
     */
    where: AthleteActivityWhereUniqueInput
  }

  /**
   * AthleteActivity deleteMany
   */
  export type AthleteActivityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AthleteActivities to delete
     */
    where?: AthleteActivityWhereInput
    /**
     * Limit how many AthleteActivities to delete.
     */
    limit?: number
  }

  /**
   * AthleteActivity without action
   */
  export type AthleteActivityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AthleteActivity
     */
    select?: AthleteActivitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AthleteActivity
     */
    omit?: AthleteActivityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AthleteActivityInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AthleteScalarFieldEnum: {
    id: 'id',
    firebaseId: 'firebaseId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phoneNumber: 'phoneNumber',
    gofastHandle: 'gofastHandle',
    birthday: 'birthday',
    gender: 'gender',
    city: 'city',
    state: 'state',
    primarySport: 'primarySport',
    photoURL: 'photoURL',
    bio: 'bio',
    instagram: 'instagram',
    runCrewId: 'runCrewId',
    currentPace: 'currentPace',
    weeklyMileage: 'weeklyMileage',
    trainingGoal: 'trainingGoal',
    targetRace: 'targetRace',
    trainingStartDate: 'trainingStartDate',
    preferredDistance: 'preferredDistance',
    timePreference: 'timePreference',
    paceRange: 'paceRange',
    runningGoals: 'runningGoals',
    garmin_user_id: 'garmin_user_id',
    garmin_access_token: 'garmin_access_token',
    garmin_refresh_token: 'garmin_refresh_token',
    garmin_expires_in: 'garmin_expires_in',
    garmin_scope: 'garmin_scope',
    garmin_connected_at: 'garmin_connected_at',
    garmin_last_sync_at: 'garmin_last_sync_at',
    garmin_permissions: 'garmin_permissions',
    garmin_is_connected: 'garmin_is_connected',
    garmin_disconnected_at: 'garmin_disconnected_at',
    garmin_user_profile: 'garmin_user_profile',
    garmin_user_sleep: 'garmin_user_sleep',
    garmin_user_preferences: 'garmin_user_preferences',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status'
  };

  export type AthleteScalarFieldEnum = (typeof AthleteScalarFieldEnum)[keyof typeof AthleteScalarFieldEnum]


  export const AthleteActivityScalarFieldEnum: {
    id: 'id',
    athleteId: 'athleteId',
    sourceActivityId: 'sourceActivityId',
    source: 'source',
    activityType: 'activityType',
    activityName: 'activityName',
    startTime: 'startTime',
    duration: 'duration',
    distance: 'distance',
    averageSpeed: 'averageSpeed',
    calories: 'calories',
    averageHeartRate: 'averageHeartRate',
    maxHeartRate: 'maxHeartRate',
    elevationGain: 'elevationGain',
    steps: 'steps',
    startLatitude: 'startLatitude',
    startLongitude: 'startLongitude',
    endLatitude: 'endLatitude',
    endLongitude: 'endLongitude',
    summaryPolyline: 'summaryPolyline',
    deviceName: 'deviceName',
    garminUserId: 'garminUserId',
    summaryData: 'summaryData',
    detailData: 'detailData',
    hydratedAt: 'hydratedAt',
    syncedAt: 'syncedAt',
    lastUpdatedAt: 'lastUpdatedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AthleteActivityScalarFieldEnum = (typeof AthleteActivityScalarFieldEnum)[keyof typeof AthleteActivityScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AthleteWhereInput = {
    AND?: AthleteWhereInput | AthleteWhereInput[]
    OR?: AthleteWhereInput[]
    NOT?: AthleteWhereInput | AthleteWhereInput[]
    id?: StringFilter<"Athlete"> | string
    firebaseId?: StringFilter<"Athlete"> | string
    firstName?: StringNullableFilter<"Athlete"> | string | null
    lastName?: StringNullableFilter<"Athlete"> | string | null
    email?: StringFilter<"Athlete"> | string
    phoneNumber?: StringNullableFilter<"Athlete"> | string | null
    gofastHandle?: StringNullableFilter<"Athlete"> | string | null
    birthday?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    gender?: StringNullableFilter<"Athlete"> | string | null
    city?: StringNullableFilter<"Athlete"> | string | null
    state?: StringNullableFilter<"Athlete"> | string | null
    primarySport?: StringNullableFilter<"Athlete"> | string | null
    photoURL?: StringNullableFilter<"Athlete"> | string | null
    bio?: StringNullableFilter<"Athlete"> | string | null
    instagram?: StringNullableFilter<"Athlete"> | string | null
    runCrewId?: StringNullableFilter<"Athlete"> | string | null
    currentPace?: StringNullableFilter<"Athlete"> | string | null
    weeklyMileage?: IntNullableFilter<"Athlete"> | number | null
    trainingGoal?: StringNullableFilter<"Athlete"> | string | null
    targetRace?: StringNullableFilter<"Athlete"> | string | null
    trainingStartDate?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    preferredDistance?: StringNullableFilter<"Athlete"> | string | null
    timePreference?: StringNullableFilter<"Athlete"> | string | null
    paceRange?: StringNullableFilter<"Athlete"> | string | null
    runningGoals?: StringNullableFilter<"Athlete"> | string | null
    garmin_user_id?: StringNullableFilter<"Athlete"> | string | null
    garmin_access_token?: StringNullableFilter<"Athlete"> | string | null
    garmin_refresh_token?: StringNullableFilter<"Athlete"> | string | null
    garmin_expires_in?: IntNullableFilter<"Athlete"> | number | null
    garmin_scope?: StringNullableFilter<"Athlete"> | string | null
    garmin_connected_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_last_sync_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_permissions?: JsonNullableFilter<"Athlete">
    garmin_is_connected?: BoolFilter<"Athlete"> | boolean
    garmin_disconnected_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_user_profile?: JsonNullableFilter<"Athlete">
    garmin_user_sleep?: JsonNullableFilter<"Athlete">
    garmin_user_preferences?: JsonNullableFilter<"Athlete">
    createdAt?: DateTimeFilter<"Athlete"> | Date | string
    updatedAt?: DateTimeFilter<"Athlete"> | Date | string
    status?: StringNullableFilter<"Athlete"> | string | null
    activities?: AthleteActivityListRelationFilter
  }

  export type AthleteOrderByWithRelationInput = {
    id?: SortOrder
    firebaseId?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    gofastHandle?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    primarySport?: SortOrderInput | SortOrder
    photoURL?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    runCrewId?: SortOrderInput | SortOrder
    currentPace?: SortOrderInput | SortOrder
    weeklyMileage?: SortOrderInput | SortOrder
    trainingGoal?: SortOrderInput | SortOrder
    targetRace?: SortOrderInput | SortOrder
    trainingStartDate?: SortOrderInput | SortOrder
    preferredDistance?: SortOrderInput | SortOrder
    timePreference?: SortOrderInput | SortOrder
    paceRange?: SortOrderInput | SortOrder
    runningGoals?: SortOrderInput | SortOrder
    garmin_user_id?: SortOrderInput | SortOrder
    garmin_access_token?: SortOrderInput | SortOrder
    garmin_refresh_token?: SortOrderInput | SortOrder
    garmin_expires_in?: SortOrderInput | SortOrder
    garmin_scope?: SortOrderInput | SortOrder
    garmin_connected_at?: SortOrderInput | SortOrder
    garmin_last_sync_at?: SortOrderInput | SortOrder
    garmin_permissions?: SortOrderInput | SortOrder
    garmin_is_connected?: SortOrder
    garmin_disconnected_at?: SortOrderInput | SortOrder
    garmin_user_profile?: SortOrderInput | SortOrder
    garmin_user_sleep?: SortOrderInput | SortOrder
    garmin_user_preferences?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrderInput | SortOrder
    activities?: AthleteActivityOrderByRelationAggregateInput
  }

  export type AthleteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    firebaseId?: string
    email?: string
    gofastHandle?: string
    AND?: AthleteWhereInput | AthleteWhereInput[]
    OR?: AthleteWhereInput[]
    NOT?: AthleteWhereInput | AthleteWhereInput[]
    firstName?: StringNullableFilter<"Athlete"> | string | null
    lastName?: StringNullableFilter<"Athlete"> | string | null
    phoneNumber?: StringNullableFilter<"Athlete"> | string | null
    birthday?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    gender?: StringNullableFilter<"Athlete"> | string | null
    city?: StringNullableFilter<"Athlete"> | string | null
    state?: StringNullableFilter<"Athlete"> | string | null
    primarySport?: StringNullableFilter<"Athlete"> | string | null
    photoURL?: StringNullableFilter<"Athlete"> | string | null
    bio?: StringNullableFilter<"Athlete"> | string | null
    instagram?: StringNullableFilter<"Athlete"> | string | null
    runCrewId?: StringNullableFilter<"Athlete"> | string | null
    currentPace?: StringNullableFilter<"Athlete"> | string | null
    weeklyMileage?: IntNullableFilter<"Athlete"> | number | null
    trainingGoal?: StringNullableFilter<"Athlete"> | string | null
    targetRace?: StringNullableFilter<"Athlete"> | string | null
    trainingStartDate?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    preferredDistance?: StringNullableFilter<"Athlete"> | string | null
    timePreference?: StringNullableFilter<"Athlete"> | string | null
    paceRange?: StringNullableFilter<"Athlete"> | string | null
    runningGoals?: StringNullableFilter<"Athlete"> | string | null
    garmin_user_id?: StringNullableFilter<"Athlete"> | string | null
    garmin_access_token?: StringNullableFilter<"Athlete"> | string | null
    garmin_refresh_token?: StringNullableFilter<"Athlete"> | string | null
    garmin_expires_in?: IntNullableFilter<"Athlete"> | number | null
    garmin_scope?: StringNullableFilter<"Athlete"> | string | null
    garmin_connected_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_last_sync_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_permissions?: JsonNullableFilter<"Athlete">
    garmin_is_connected?: BoolFilter<"Athlete"> | boolean
    garmin_disconnected_at?: DateTimeNullableFilter<"Athlete"> | Date | string | null
    garmin_user_profile?: JsonNullableFilter<"Athlete">
    garmin_user_sleep?: JsonNullableFilter<"Athlete">
    garmin_user_preferences?: JsonNullableFilter<"Athlete">
    createdAt?: DateTimeFilter<"Athlete"> | Date | string
    updatedAt?: DateTimeFilter<"Athlete"> | Date | string
    status?: StringNullableFilter<"Athlete"> | string | null
    activities?: AthleteActivityListRelationFilter
  }, "id" | "firebaseId" | "email" | "gofastHandle">

  export type AthleteOrderByWithAggregationInput = {
    id?: SortOrder
    firebaseId?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    email?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    gofastHandle?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    primarySport?: SortOrderInput | SortOrder
    photoURL?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    runCrewId?: SortOrderInput | SortOrder
    currentPace?: SortOrderInput | SortOrder
    weeklyMileage?: SortOrderInput | SortOrder
    trainingGoal?: SortOrderInput | SortOrder
    targetRace?: SortOrderInput | SortOrder
    trainingStartDate?: SortOrderInput | SortOrder
    preferredDistance?: SortOrderInput | SortOrder
    timePreference?: SortOrderInput | SortOrder
    paceRange?: SortOrderInput | SortOrder
    runningGoals?: SortOrderInput | SortOrder
    garmin_user_id?: SortOrderInput | SortOrder
    garmin_access_token?: SortOrderInput | SortOrder
    garmin_refresh_token?: SortOrderInput | SortOrder
    garmin_expires_in?: SortOrderInput | SortOrder
    garmin_scope?: SortOrderInput | SortOrder
    garmin_connected_at?: SortOrderInput | SortOrder
    garmin_last_sync_at?: SortOrderInput | SortOrder
    garmin_permissions?: SortOrderInput | SortOrder
    garmin_is_connected?: SortOrder
    garmin_disconnected_at?: SortOrderInput | SortOrder
    garmin_user_profile?: SortOrderInput | SortOrder
    garmin_user_sleep?: SortOrderInput | SortOrder
    garmin_user_preferences?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: AthleteCountOrderByAggregateInput
    _avg?: AthleteAvgOrderByAggregateInput
    _max?: AthleteMaxOrderByAggregateInput
    _min?: AthleteMinOrderByAggregateInput
    _sum?: AthleteSumOrderByAggregateInput
  }

  export type AthleteScalarWhereWithAggregatesInput = {
    AND?: AthleteScalarWhereWithAggregatesInput | AthleteScalarWhereWithAggregatesInput[]
    OR?: AthleteScalarWhereWithAggregatesInput[]
    NOT?: AthleteScalarWhereWithAggregatesInput | AthleteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Athlete"> | string
    firebaseId?: StringWithAggregatesFilter<"Athlete"> | string
    firstName?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    email?: StringWithAggregatesFilter<"Athlete"> | string
    phoneNumber?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    gofastHandle?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    birthday?: DateTimeNullableWithAggregatesFilter<"Athlete"> | Date | string | null
    gender?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    city?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    state?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    primarySport?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    photoURL?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    bio?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    instagram?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    runCrewId?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    currentPace?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    weeklyMileage?: IntNullableWithAggregatesFilter<"Athlete"> | number | null
    trainingGoal?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    targetRace?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    trainingStartDate?: DateTimeNullableWithAggregatesFilter<"Athlete"> | Date | string | null
    preferredDistance?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    timePreference?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    paceRange?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    runningGoals?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    garmin_user_id?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    garmin_access_token?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    garmin_refresh_token?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    garmin_expires_in?: IntNullableWithAggregatesFilter<"Athlete"> | number | null
    garmin_scope?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
    garmin_connected_at?: DateTimeNullableWithAggregatesFilter<"Athlete"> | Date | string | null
    garmin_last_sync_at?: DateTimeNullableWithAggregatesFilter<"Athlete"> | Date | string | null
    garmin_permissions?: JsonNullableWithAggregatesFilter<"Athlete">
    garmin_is_connected?: BoolWithAggregatesFilter<"Athlete"> | boolean
    garmin_disconnected_at?: DateTimeNullableWithAggregatesFilter<"Athlete"> | Date | string | null
    garmin_user_profile?: JsonNullableWithAggregatesFilter<"Athlete">
    garmin_user_sleep?: JsonNullableWithAggregatesFilter<"Athlete">
    garmin_user_preferences?: JsonNullableWithAggregatesFilter<"Athlete">
    createdAt?: DateTimeWithAggregatesFilter<"Athlete"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Athlete"> | Date | string
    status?: StringNullableWithAggregatesFilter<"Athlete"> | string | null
  }

  export type AthleteActivityWhereInput = {
    AND?: AthleteActivityWhereInput | AthleteActivityWhereInput[]
    OR?: AthleteActivityWhereInput[]
    NOT?: AthleteActivityWhereInput | AthleteActivityWhereInput[]
    id?: StringFilter<"AthleteActivity"> | string
    athleteId?: StringFilter<"AthleteActivity"> | string
    sourceActivityId?: StringFilter<"AthleteActivity"> | string
    source?: StringFilter<"AthleteActivity"> | string
    activityType?: StringNullableFilter<"AthleteActivity"> | string | null
    activityName?: StringNullableFilter<"AthleteActivity"> | string | null
    startTime?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    duration?: IntNullableFilter<"AthleteActivity"> | number | null
    distance?: FloatNullableFilter<"AthleteActivity"> | number | null
    averageSpeed?: FloatNullableFilter<"AthleteActivity"> | number | null
    calories?: IntNullableFilter<"AthleteActivity"> | number | null
    averageHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    maxHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    elevationGain?: FloatNullableFilter<"AthleteActivity"> | number | null
    steps?: IntNullableFilter<"AthleteActivity"> | number | null
    startLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    startLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    summaryPolyline?: StringNullableFilter<"AthleteActivity"> | string | null
    deviceName?: StringNullableFilter<"AthleteActivity"> | string | null
    garminUserId?: StringNullableFilter<"AthleteActivity"> | string | null
    summaryData?: JsonNullableFilter<"AthleteActivity">
    detailData?: JsonNullableFilter<"AthleteActivity">
    hydratedAt?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    syncedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    createdAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    updatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    athlete?: XOR<AthleteScalarRelationFilter, AthleteWhereInput>
  }

  export type AthleteActivityOrderByWithRelationInput = {
    id?: SortOrder
    athleteId?: SortOrder
    sourceActivityId?: SortOrder
    source?: SortOrder
    activityType?: SortOrderInput | SortOrder
    activityName?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    distance?: SortOrderInput | SortOrder
    averageSpeed?: SortOrderInput | SortOrder
    calories?: SortOrderInput | SortOrder
    averageHeartRate?: SortOrderInput | SortOrder
    maxHeartRate?: SortOrderInput | SortOrder
    elevationGain?: SortOrderInput | SortOrder
    steps?: SortOrderInput | SortOrder
    startLatitude?: SortOrderInput | SortOrder
    startLongitude?: SortOrderInput | SortOrder
    endLatitude?: SortOrderInput | SortOrder
    endLongitude?: SortOrderInput | SortOrder
    summaryPolyline?: SortOrderInput | SortOrder
    deviceName?: SortOrderInput | SortOrder
    garminUserId?: SortOrderInput | SortOrder
    summaryData?: SortOrderInput | SortOrder
    detailData?: SortOrderInput | SortOrder
    hydratedAt?: SortOrderInput | SortOrder
    syncedAt?: SortOrder
    lastUpdatedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    athlete?: AthleteOrderByWithRelationInput
  }

  export type AthleteActivityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sourceActivityId?: string
    AND?: AthleteActivityWhereInput | AthleteActivityWhereInput[]
    OR?: AthleteActivityWhereInput[]
    NOT?: AthleteActivityWhereInput | AthleteActivityWhereInput[]
    athleteId?: StringFilter<"AthleteActivity"> | string
    source?: StringFilter<"AthleteActivity"> | string
    activityType?: StringNullableFilter<"AthleteActivity"> | string | null
    activityName?: StringNullableFilter<"AthleteActivity"> | string | null
    startTime?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    duration?: IntNullableFilter<"AthleteActivity"> | number | null
    distance?: FloatNullableFilter<"AthleteActivity"> | number | null
    averageSpeed?: FloatNullableFilter<"AthleteActivity"> | number | null
    calories?: IntNullableFilter<"AthleteActivity"> | number | null
    averageHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    maxHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    elevationGain?: FloatNullableFilter<"AthleteActivity"> | number | null
    steps?: IntNullableFilter<"AthleteActivity"> | number | null
    startLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    startLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    summaryPolyline?: StringNullableFilter<"AthleteActivity"> | string | null
    deviceName?: StringNullableFilter<"AthleteActivity"> | string | null
    garminUserId?: StringNullableFilter<"AthleteActivity"> | string | null
    summaryData?: JsonNullableFilter<"AthleteActivity">
    detailData?: JsonNullableFilter<"AthleteActivity">
    hydratedAt?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    syncedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    createdAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    updatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    athlete?: XOR<AthleteScalarRelationFilter, AthleteWhereInput>
  }, "id" | "sourceActivityId">

  export type AthleteActivityOrderByWithAggregationInput = {
    id?: SortOrder
    athleteId?: SortOrder
    sourceActivityId?: SortOrder
    source?: SortOrder
    activityType?: SortOrderInput | SortOrder
    activityName?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    distance?: SortOrderInput | SortOrder
    averageSpeed?: SortOrderInput | SortOrder
    calories?: SortOrderInput | SortOrder
    averageHeartRate?: SortOrderInput | SortOrder
    maxHeartRate?: SortOrderInput | SortOrder
    elevationGain?: SortOrderInput | SortOrder
    steps?: SortOrderInput | SortOrder
    startLatitude?: SortOrderInput | SortOrder
    startLongitude?: SortOrderInput | SortOrder
    endLatitude?: SortOrderInput | SortOrder
    endLongitude?: SortOrderInput | SortOrder
    summaryPolyline?: SortOrderInput | SortOrder
    deviceName?: SortOrderInput | SortOrder
    garminUserId?: SortOrderInput | SortOrder
    summaryData?: SortOrderInput | SortOrder
    detailData?: SortOrderInput | SortOrder
    hydratedAt?: SortOrderInput | SortOrder
    syncedAt?: SortOrder
    lastUpdatedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AthleteActivityCountOrderByAggregateInput
    _avg?: AthleteActivityAvgOrderByAggregateInput
    _max?: AthleteActivityMaxOrderByAggregateInput
    _min?: AthleteActivityMinOrderByAggregateInput
    _sum?: AthleteActivitySumOrderByAggregateInput
  }

  export type AthleteActivityScalarWhereWithAggregatesInput = {
    AND?: AthleteActivityScalarWhereWithAggregatesInput | AthleteActivityScalarWhereWithAggregatesInput[]
    OR?: AthleteActivityScalarWhereWithAggregatesInput[]
    NOT?: AthleteActivityScalarWhereWithAggregatesInput | AthleteActivityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AthleteActivity"> | string
    athleteId?: StringWithAggregatesFilter<"AthleteActivity"> | string
    sourceActivityId?: StringWithAggregatesFilter<"AthleteActivity"> | string
    source?: StringWithAggregatesFilter<"AthleteActivity"> | string
    activityType?: StringNullableWithAggregatesFilter<"AthleteActivity"> | string | null
    activityName?: StringNullableWithAggregatesFilter<"AthleteActivity"> | string | null
    startTime?: DateTimeNullableWithAggregatesFilter<"AthleteActivity"> | Date | string | null
    duration?: IntNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    distance?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    averageSpeed?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    calories?: IntNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    averageHeartRate?: IntNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    maxHeartRate?: IntNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    elevationGain?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    steps?: IntNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    startLatitude?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    startLongitude?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    endLatitude?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    endLongitude?: FloatNullableWithAggregatesFilter<"AthleteActivity"> | number | null
    summaryPolyline?: StringNullableWithAggregatesFilter<"AthleteActivity"> | string | null
    deviceName?: StringNullableWithAggregatesFilter<"AthleteActivity"> | string | null
    garminUserId?: StringNullableWithAggregatesFilter<"AthleteActivity"> | string | null
    summaryData?: JsonNullableWithAggregatesFilter<"AthleteActivity">
    detailData?: JsonNullableWithAggregatesFilter<"AthleteActivity">
    hydratedAt?: DateTimeNullableWithAggregatesFilter<"AthleteActivity"> | Date | string | null
    syncedAt?: DateTimeWithAggregatesFilter<"AthleteActivity"> | Date | string
    lastUpdatedAt?: DateTimeWithAggregatesFilter<"AthleteActivity"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"AthleteActivity"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AthleteActivity"> | Date | string
  }

  export type AthleteCreateInput = {
    id?: string
    firebaseId: string
    firstName?: string | null
    lastName?: string | null
    email: string
    phoneNumber?: string | null
    gofastHandle?: string | null
    birthday?: Date | string | null
    gender?: string | null
    city?: string | null
    state?: string | null
    primarySport?: string | null
    photoURL?: string | null
    bio?: string | null
    instagram?: string | null
    runCrewId?: string | null
    currentPace?: string | null
    weeklyMileage?: number | null
    trainingGoal?: string | null
    targetRace?: string | null
    trainingStartDate?: Date | string | null
    preferredDistance?: string | null
    timePreference?: string | null
    paceRange?: string | null
    runningGoals?: string | null
    garmin_user_id?: string | null
    garmin_access_token?: string | null
    garmin_refresh_token?: string | null
    garmin_expires_in?: number | null
    garmin_scope?: string | null
    garmin_connected_at?: Date | string | null
    garmin_last_sync_at?: Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: boolean
    garmin_disconnected_at?: Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: string | null
    activities?: AthleteActivityCreateNestedManyWithoutAthleteInput
  }

  export type AthleteUncheckedCreateInput = {
    id?: string
    firebaseId: string
    firstName?: string | null
    lastName?: string | null
    email: string
    phoneNumber?: string | null
    gofastHandle?: string | null
    birthday?: Date | string | null
    gender?: string | null
    city?: string | null
    state?: string | null
    primarySport?: string | null
    photoURL?: string | null
    bio?: string | null
    instagram?: string | null
    runCrewId?: string | null
    currentPace?: string | null
    weeklyMileage?: number | null
    trainingGoal?: string | null
    targetRace?: string | null
    trainingStartDate?: Date | string | null
    preferredDistance?: string | null
    timePreference?: string | null
    paceRange?: string | null
    runningGoals?: string | null
    garmin_user_id?: string | null
    garmin_access_token?: string | null
    garmin_refresh_token?: string | null
    garmin_expires_in?: number | null
    garmin_scope?: string | null
    garmin_connected_at?: Date | string | null
    garmin_last_sync_at?: Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: boolean
    garmin_disconnected_at?: Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: string | null
    activities?: AthleteActivityUncheckedCreateNestedManyWithoutAthleteInput
  }

  export type AthleteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    activities?: AthleteActivityUpdateManyWithoutAthleteNestedInput
  }

  export type AthleteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    activities?: AthleteActivityUncheckedUpdateManyWithoutAthleteNestedInput
  }

  export type AthleteCreateManyInput = {
    id?: string
    firebaseId: string
    firstName?: string | null
    lastName?: string | null
    email: string
    phoneNumber?: string | null
    gofastHandle?: string | null
    birthday?: Date | string | null
    gender?: string | null
    city?: string | null
    state?: string | null
    primarySport?: string | null
    photoURL?: string | null
    bio?: string | null
    instagram?: string | null
    runCrewId?: string | null
    currentPace?: string | null
    weeklyMileage?: number | null
    trainingGoal?: string | null
    targetRace?: string | null
    trainingStartDate?: Date | string | null
    preferredDistance?: string | null
    timePreference?: string | null
    paceRange?: string | null
    runningGoals?: string | null
    garmin_user_id?: string | null
    garmin_access_token?: string | null
    garmin_refresh_token?: string | null
    garmin_expires_in?: number | null
    garmin_scope?: string | null
    garmin_connected_at?: Date | string | null
    garmin_last_sync_at?: Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: boolean
    garmin_disconnected_at?: Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: string | null
  }

  export type AthleteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AthleteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AthleteActivityCreateInput = {
    id?: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    athlete: AthleteCreateNestedOneWithoutActivitiesInput
  }

  export type AthleteActivityUncheckedCreateInput = {
    id?: string
    athleteId: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AthleteActivityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    athlete?: AthleteUpdateOneRequiredWithoutActivitiesNestedInput
  }

  export type AthleteActivityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    athleteId?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AthleteActivityCreateManyInput = {
    id?: string
    athleteId: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AthleteActivityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AthleteActivityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    athleteId?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AthleteActivityListRelationFilter = {
    every?: AthleteActivityWhereInput
    some?: AthleteActivityWhereInput
    none?: AthleteActivityWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AthleteActivityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AthleteCountOrderByAggregateInput = {
    id?: SortOrder
    firebaseId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    gofastHandle?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    city?: SortOrder
    state?: SortOrder
    primarySport?: SortOrder
    photoURL?: SortOrder
    bio?: SortOrder
    instagram?: SortOrder
    runCrewId?: SortOrder
    currentPace?: SortOrder
    weeklyMileage?: SortOrder
    trainingGoal?: SortOrder
    targetRace?: SortOrder
    trainingStartDate?: SortOrder
    preferredDistance?: SortOrder
    timePreference?: SortOrder
    paceRange?: SortOrder
    runningGoals?: SortOrder
    garmin_user_id?: SortOrder
    garmin_access_token?: SortOrder
    garmin_refresh_token?: SortOrder
    garmin_expires_in?: SortOrder
    garmin_scope?: SortOrder
    garmin_connected_at?: SortOrder
    garmin_last_sync_at?: SortOrder
    garmin_permissions?: SortOrder
    garmin_is_connected?: SortOrder
    garmin_disconnected_at?: SortOrder
    garmin_user_profile?: SortOrder
    garmin_user_sleep?: SortOrder
    garmin_user_preferences?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AthleteAvgOrderByAggregateInput = {
    weeklyMileage?: SortOrder
    garmin_expires_in?: SortOrder
  }

  export type AthleteMaxOrderByAggregateInput = {
    id?: SortOrder
    firebaseId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    gofastHandle?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    city?: SortOrder
    state?: SortOrder
    primarySport?: SortOrder
    photoURL?: SortOrder
    bio?: SortOrder
    instagram?: SortOrder
    runCrewId?: SortOrder
    currentPace?: SortOrder
    weeklyMileage?: SortOrder
    trainingGoal?: SortOrder
    targetRace?: SortOrder
    trainingStartDate?: SortOrder
    preferredDistance?: SortOrder
    timePreference?: SortOrder
    paceRange?: SortOrder
    runningGoals?: SortOrder
    garmin_user_id?: SortOrder
    garmin_access_token?: SortOrder
    garmin_refresh_token?: SortOrder
    garmin_expires_in?: SortOrder
    garmin_scope?: SortOrder
    garmin_connected_at?: SortOrder
    garmin_last_sync_at?: SortOrder
    garmin_is_connected?: SortOrder
    garmin_disconnected_at?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AthleteMinOrderByAggregateInput = {
    id?: SortOrder
    firebaseId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phoneNumber?: SortOrder
    gofastHandle?: SortOrder
    birthday?: SortOrder
    gender?: SortOrder
    city?: SortOrder
    state?: SortOrder
    primarySport?: SortOrder
    photoURL?: SortOrder
    bio?: SortOrder
    instagram?: SortOrder
    runCrewId?: SortOrder
    currentPace?: SortOrder
    weeklyMileage?: SortOrder
    trainingGoal?: SortOrder
    targetRace?: SortOrder
    trainingStartDate?: SortOrder
    preferredDistance?: SortOrder
    timePreference?: SortOrder
    paceRange?: SortOrder
    runningGoals?: SortOrder
    garmin_user_id?: SortOrder
    garmin_access_token?: SortOrder
    garmin_refresh_token?: SortOrder
    garmin_expires_in?: SortOrder
    garmin_scope?: SortOrder
    garmin_connected_at?: SortOrder
    garmin_last_sync_at?: SortOrder
    garmin_is_connected?: SortOrder
    garmin_disconnected_at?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AthleteSumOrderByAggregateInput = {
    weeklyMileage?: SortOrder
    garmin_expires_in?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type AthleteScalarRelationFilter = {
    is?: AthleteWhereInput
    isNot?: AthleteWhereInput
  }

  export type AthleteActivityCountOrderByAggregateInput = {
    id?: SortOrder
    athleteId?: SortOrder
    sourceActivityId?: SortOrder
    source?: SortOrder
    activityType?: SortOrder
    activityName?: SortOrder
    startTime?: SortOrder
    duration?: SortOrder
    distance?: SortOrder
    averageSpeed?: SortOrder
    calories?: SortOrder
    averageHeartRate?: SortOrder
    maxHeartRate?: SortOrder
    elevationGain?: SortOrder
    steps?: SortOrder
    startLatitude?: SortOrder
    startLongitude?: SortOrder
    endLatitude?: SortOrder
    endLongitude?: SortOrder
    summaryPolyline?: SortOrder
    deviceName?: SortOrder
    garminUserId?: SortOrder
    summaryData?: SortOrder
    detailData?: SortOrder
    hydratedAt?: SortOrder
    syncedAt?: SortOrder
    lastUpdatedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AthleteActivityAvgOrderByAggregateInput = {
    duration?: SortOrder
    distance?: SortOrder
    averageSpeed?: SortOrder
    calories?: SortOrder
    averageHeartRate?: SortOrder
    maxHeartRate?: SortOrder
    elevationGain?: SortOrder
    steps?: SortOrder
    startLatitude?: SortOrder
    startLongitude?: SortOrder
    endLatitude?: SortOrder
    endLongitude?: SortOrder
  }

  export type AthleteActivityMaxOrderByAggregateInput = {
    id?: SortOrder
    athleteId?: SortOrder
    sourceActivityId?: SortOrder
    source?: SortOrder
    activityType?: SortOrder
    activityName?: SortOrder
    startTime?: SortOrder
    duration?: SortOrder
    distance?: SortOrder
    averageSpeed?: SortOrder
    calories?: SortOrder
    averageHeartRate?: SortOrder
    maxHeartRate?: SortOrder
    elevationGain?: SortOrder
    steps?: SortOrder
    startLatitude?: SortOrder
    startLongitude?: SortOrder
    endLatitude?: SortOrder
    endLongitude?: SortOrder
    summaryPolyline?: SortOrder
    deviceName?: SortOrder
    garminUserId?: SortOrder
    hydratedAt?: SortOrder
    syncedAt?: SortOrder
    lastUpdatedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AthleteActivityMinOrderByAggregateInput = {
    id?: SortOrder
    athleteId?: SortOrder
    sourceActivityId?: SortOrder
    source?: SortOrder
    activityType?: SortOrder
    activityName?: SortOrder
    startTime?: SortOrder
    duration?: SortOrder
    distance?: SortOrder
    averageSpeed?: SortOrder
    calories?: SortOrder
    averageHeartRate?: SortOrder
    maxHeartRate?: SortOrder
    elevationGain?: SortOrder
    steps?: SortOrder
    startLatitude?: SortOrder
    startLongitude?: SortOrder
    endLatitude?: SortOrder
    endLongitude?: SortOrder
    summaryPolyline?: SortOrder
    deviceName?: SortOrder
    garminUserId?: SortOrder
    hydratedAt?: SortOrder
    syncedAt?: SortOrder
    lastUpdatedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AthleteActivitySumOrderByAggregateInput = {
    duration?: SortOrder
    distance?: SortOrder
    averageSpeed?: SortOrder
    calories?: SortOrder
    averageHeartRate?: SortOrder
    maxHeartRate?: SortOrder
    elevationGain?: SortOrder
    steps?: SortOrder
    startLatitude?: SortOrder
    startLongitude?: SortOrder
    endLatitude?: SortOrder
    endLongitude?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type AthleteActivityCreateNestedManyWithoutAthleteInput = {
    create?: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput> | AthleteActivityCreateWithoutAthleteInput[] | AthleteActivityUncheckedCreateWithoutAthleteInput[]
    connectOrCreate?: AthleteActivityCreateOrConnectWithoutAthleteInput | AthleteActivityCreateOrConnectWithoutAthleteInput[]
    createMany?: AthleteActivityCreateManyAthleteInputEnvelope
    connect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
  }

  export type AthleteActivityUncheckedCreateNestedManyWithoutAthleteInput = {
    create?: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput> | AthleteActivityCreateWithoutAthleteInput[] | AthleteActivityUncheckedCreateWithoutAthleteInput[]
    connectOrCreate?: AthleteActivityCreateOrConnectWithoutAthleteInput | AthleteActivityCreateOrConnectWithoutAthleteInput[]
    createMany?: AthleteActivityCreateManyAthleteInputEnvelope
    connect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type AthleteActivityUpdateManyWithoutAthleteNestedInput = {
    create?: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput> | AthleteActivityCreateWithoutAthleteInput[] | AthleteActivityUncheckedCreateWithoutAthleteInput[]
    connectOrCreate?: AthleteActivityCreateOrConnectWithoutAthleteInput | AthleteActivityCreateOrConnectWithoutAthleteInput[]
    upsert?: AthleteActivityUpsertWithWhereUniqueWithoutAthleteInput | AthleteActivityUpsertWithWhereUniqueWithoutAthleteInput[]
    createMany?: AthleteActivityCreateManyAthleteInputEnvelope
    set?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    disconnect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    delete?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    connect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    update?: AthleteActivityUpdateWithWhereUniqueWithoutAthleteInput | AthleteActivityUpdateWithWhereUniqueWithoutAthleteInput[]
    updateMany?: AthleteActivityUpdateManyWithWhereWithoutAthleteInput | AthleteActivityUpdateManyWithWhereWithoutAthleteInput[]
    deleteMany?: AthleteActivityScalarWhereInput | AthleteActivityScalarWhereInput[]
  }

  export type AthleteActivityUncheckedUpdateManyWithoutAthleteNestedInput = {
    create?: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput> | AthleteActivityCreateWithoutAthleteInput[] | AthleteActivityUncheckedCreateWithoutAthleteInput[]
    connectOrCreate?: AthleteActivityCreateOrConnectWithoutAthleteInput | AthleteActivityCreateOrConnectWithoutAthleteInput[]
    upsert?: AthleteActivityUpsertWithWhereUniqueWithoutAthleteInput | AthleteActivityUpsertWithWhereUniqueWithoutAthleteInput[]
    createMany?: AthleteActivityCreateManyAthleteInputEnvelope
    set?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    disconnect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    delete?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    connect?: AthleteActivityWhereUniqueInput | AthleteActivityWhereUniqueInput[]
    update?: AthleteActivityUpdateWithWhereUniqueWithoutAthleteInput | AthleteActivityUpdateWithWhereUniqueWithoutAthleteInput[]
    updateMany?: AthleteActivityUpdateManyWithWhereWithoutAthleteInput | AthleteActivityUpdateManyWithWhereWithoutAthleteInput[]
    deleteMany?: AthleteActivityScalarWhereInput | AthleteActivityScalarWhereInput[]
  }

  export type AthleteCreateNestedOneWithoutActivitiesInput = {
    create?: XOR<AthleteCreateWithoutActivitiesInput, AthleteUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: AthleteCreateOrConnectWithoutActivitiesInput
    connect?: AthleteWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AthleteUpdateOneRequiredWithoutActivitiesNestedInput = {
    create?: XOR<AthleteCreateWithoutActivitiesInput, AthleteUncheckedCreateWithoutActivitiesInput>
    connectOrCreate?: AthleteCreateOrConnectWithoutActivitiesInput
    upsert?: AthleteUpsertWithoutActivitiesInput
    connect?: AthleteWhereUniqueInput
    update?: XOR<XOR<AthleteUpdateToOneWithWhereWithoutActivitiesInput, AthleteUpdateWithoutActivitiesInput>, AthleteUncheckedUpdateWithoutActivitiesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type AthleteActivityCreateWithoutAthleteInput = {
    id?: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AthleteActivityUncheckedCreateWithoutAthleteInput = {
    id?: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AthleteActivityCreateOrConnectWithoutAthleteInput = {
    where: AthleteActivityWhereUniqueInput
    create: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput>
  }

  export type AthleteActivityCreateManyAthleteInputEnvelope = {
    data: AthleteActivityCreateManyAthleteInput | AthleteActivityCreateManyAthleteInput[]
    skipDuplicates?: boolean
  }

  export type AthleteActivityUpsertWithWhereUniqueWithoutAthleteInput = {
    where: AthleteActivityWhereUniqueInput
    update: XOR<AthleteActivityUpdateWithoutAthleteInput, AthleteActivityUncheckedUpdateWithoutAthleteInput>
    create: XOR<AthleteActivityCreateWithoutAthleteInput, AthleteActivityUncheckedCreateWithoutAthleteInput>
  }

  export type AthleteActivityUpdateWithWhereUniqueWithoutAthleteInput = {
    where: AthleteActivityWhereUniqueInput
    data: XOR<AthleteActivityUpdateWithoutAthleteInput, AthleteActivityUncheckedUpdateWithoutAthleteInput>
  }

  export type AthleteActivityUpdateManyWithWhereWithoutAthleteInput = {
    where: AthleteActivityScalarWhereInput
    data: XOR<AthleteActivityUpdateManyMutationInput, AthleteActivityUncheckedUpdateManyWithoutAthleteInput>
  }

  export type AthleteActivityScalarWhereInput = {
    AND?: AthleteActivityScalarWhereInput | AthleteActivityScalarWhereInput[]
    OR?: AthleteActivityScalarWhereInput[]
    NOT?: AthleteActivityScalarWhereInput | AthleteActivityScalarWhereInput[]
    id?: StringFilter<"AthleteActivity"> | string
    athleteId?: StringFilter<"AthleteActivity"> | string
    sourceActivityId?: StringFilter<"AthleteActivity"> | string
    source?: StringFilter<"AthleteActivity"> | string
    activityType?: StringNullableFilter<"AthleteActivity"> | string | null
    activityName?: StringNullableFilter<"AthleteActivity"> | string | null
    startTime?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    duration?: IntNullableFilter<"AthleteActivity"> | number | null
    distance?: FloatNullableFilter<"AthleteActivity"> | number | null
    averageSpeed?: FloatNullableFilter<"AthleteActivity"> | number | null
    calories?: IntNullableFilter<"AthleteActivity"> | number | null
    averageHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    maxHeartRate?: IntNullableFilter<"AthleteActivity"> | number | null
    elevationGain?: FloatNullableFilter<"AthleteActivity"> | number | null
    steps?: IntNullableFilter<"AthleteActivity"> | number | null
    startLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    startLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLatitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    endLongitude?: FloatNullableFilter<"AthleteActivity"> | number | null
    summaryPolyline?: StringNullableFilter<"AthleteActivity"> | string | null
    deviceName?: StringNullableFilter<"AthleteActivity"> | string | null
    garminUserId?: StringNullableFilter<"AthleteActivity"> | string | null
    summaryData?: JsonNullableFilter<"AthleteActivity">
    detailData?: JsonNullableFilter<"AthleteActivity">
    hydratedAt?: DateTimeNullableFilter<"AthleteActivity"> | Date | string | null
    syncedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    lastUpdatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    createdAt?: DateTimeFilter<"AthleteActivity"> | Date | string
    updatedAt?: DateTimeFilter<"AthleteActivity"> | Date | string
  }

  export type AthleteCreateWithoutActivitiesInput = {
    id?: string
    firebaseId: string
    firstName?: string | null
    lastName?: string | null
    email: string
    phoneNumber?: string | null
    gofastHandle?: string | null
    birthday?: Date | string | null
    gender?: string | null
    city?: string | null
    state?: string | null
    primarySport?: string | null
    photoURL?: string | null
    bio?: string | null
    instagram?: string | null
    runCrewId?: string | null
    currentPace?: string | null
    weeklyMileage?: number | null
    trainingGoal?: string | null
    targetRace?: string | null
    trainingStartDate?: Date | string | null
    preferredDistance?: string | null
    timePreference?: string | null
    paceRange?: string | null
    runningGoals?: string | null
    garmin_user_id?: string | null
    garmin_access_token?: string | null
    garmin_refresh_token?: string | null
    garmin_expires_in?: number | null
    garmin_scope?: string | null
    garmin_connected_at?: Date | string | null
    garmin_last_sync_at?: Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: boolean
    garmin_disconnected_at?: Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: string | null
  }

  export type AthleteUncheckedCreateWithoutActivitiesInput = {
    id?: string
    firebaseId: string
    firstName?: string | null
    lastName?: string | null
    email: string
    phoneNumber?: string | null
    gofastHandle?: string | null
    birthday?: Date | string | null
    gender?: string | null
    city?: string | null
    state?: string | null
    primarySport?: string | null
    photoURL?: string | null
    bio?: string | null
    instagram?: string | null
    runCrewId?: string | null
    currentPace?: string | null
    weeklyMileage?: number | null
    trainingGoal?: string | null
    targetRace?: string | null
    trainingStartDate?: Date | string | null
    preferredDistance?: string | null
    timePreference?: string | null
    paceRange?: string | null
    runningGoals?: string | null
    garmin_user_id?: string | null
    garmin_access_token?: string | null
    garmin_refresh_token?: string | null
    garmin_expires_in?: number | null
    garmin_scope?: string | null
    garmin_connected_at?: Date | string | null
    garmin_last_sync_at?: Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: boolean
    garmin_disconnected_at?: Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: string | null
  }

  export type AthleteCreateOrConnectWithoutActivitiesInput = {
    where: AthleteWhereUniqueInput
    create: XOR<AthleteCreateWithoutActivitiesInput, AthleteUncheckedCreateWithoutActivitiesInput>
  }

  export type AthleteUpsertWithoutActivitiesInput = {
    update: XOR<AthleteUpdateWithoutActivitiesInput, AthleteUncheckedUpdateWithoutActivitiesInput>
    create: XOR<AthleteCreateWithoutActivitiesInput, AthleteUncheckedCreateWithoutActivitiesInput>
    where?: AthleteWhereInput
  }

  export type AthleteUpdateToOneWithWhereWithoutActivitiesInput = {
    where?: AthleteWhereInput
    data: XOR<AthleteUpdateWithoutActivitiesInput, AthleteUncheckedUpdateWithoutActivitiesInput>
  }

  export type AthleteUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AthleteUncheckedUpdateWithoutActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    firebaseId?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gofastHandle?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    primarySport?: NullableStringFieldUpdateOperationsInput | string | null
    photoURL?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    runCrewId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPace?: NullableStringFieldUpdateOperationsInput | string | null
    weeklyMileage?: NullableIntFieldUpdateOperationsInput | number | null
    trainingGoal?: NullableStringFieldUpdateOperationsInput | string | null
    targetRace?: NullableStringFieldUpdateOperationsInput | string | null
    trainingStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredDistance?: NullableStringFieldUpdateOperationsInput | string | null
    timePreference?: NullableStringFieldUpdateOperationsInput | string | null
    paceRange?: NullableStringFieldUpdateOperationsInput | string | null
    runningGoals?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_expires_in?: NullableIntFieldUpdateOperationsInput | number | null
    garmin_scope?: NullableStringFieldUpdateOperationsInput | string | null
    garmin_connected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_last_sync_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_permissions?: NullableJsonNullValueInput | InputJsonValue
    garmin_is_connected?: BoolFieldUpdateOperationsInput | boolean
    garmin_disconnected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    garmin_user_profile?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_sleep?: NullableJsonNullValueInput | InputJsonValue
    garmin_user_preferences?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AthleteActivityCreateManyAthleteInput = {
    id?: string
    sourceActivityId: string
    source?: string
    activityType?: string | null
    activityName?: string | null
    startTime?: Date | string | null
    duration?: number | null
    distance?: number | null
    averageSpeed?: number | null
    calories?: number | null
    averageHeartRate?: number | null
    maxHeartRate?: number | null
    elevationGain?: number | null
    steps?: number | null
    startLatitude?: number | null
    startLongitude?: number | null
    endLatitude?: number | null
    endLongitude?: number | null
    summaryPolyline?: string | null
    deviceName?: string | null
    garminUserId?: string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: Date | string | null
    syncedAt?: Date | string
    lastUpdatedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AthleteActivityUpdateWithoutAthleteInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AthleteActivityUncheckedUpdateWithoutAthleteInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AthleteActivityUncheckedUpdateManyWithoutAthleteInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceActivityId?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    activityType?: NullableStringFieldUpdateOperationsInput | string | null
    activityName?: NullableStringFieldUpdateOperationsInput | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    distance?: NullableFloatFieldUpdateOperationsInput | number | null
    averageSpeed?: NullableFloatFieldUpdateOperationsInput | number | null
    calories?: NullableIntFieldUpdateOperationsInput | number | null
    averageHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    maxHeartRate?: NullableIntFieldUpdateOperationsInput | number | null
    elevationGain?: NullableFloatFieldUpdateOperationsInput | number | null
    steps?: NullableIntFieldUpdateOperationsInput | number | null
    startLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    startLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    endLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    summaryPolyline?: NullableStringFieldUpdateOperationsInput | string | null
    deviceName?: NullableStringFieldUpdateOperationsInput | string | null
    garminUserId?: NullableStringFieldUpdateOperationsInput | string | null
    summaryData?: NullableJsonNullValueInput | InputJsonValue
    detailData?: NullableJsonNullValueInput | InputJsonValue
    hydratedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}